[
  {
    "objectID": "Prototype/PML.html",
    "href": "Prototype/PML.html",
    "title": "Panel Data Modeling",
    "section": "",
    "text": "In this page, I will be exploring the codes for building up Panel Model and relevant statistic test"
  },
  {
    "objectID": "Prototype/PML.html#loading-r-package",
    "href": "Prototype/PML.html#loading-r-package",
    "title": "Panel Data Modeling",
    "section": "2.1Loading R package",
    "text": "2.1Loading R package\nThe project uses p_load() of pacman package to check if the R package are installed in the computer.\nThe following code chunk is used to install and launch the R packages.\n\npacman::p_load(tidyverse, ggplot2, plm,ExPanDaR,lubridate, ggthemes, plotly,dplyr,purrr,lmtest)"
  },
  {
    "objectID": "Prototype/PML.html#import-data",
    "href": "Prototype/PML.html#import-data",
    "title": "Panel Data Modeling",
    "section": "2.2 Import Data",
    "text": "2.2 Import Data\n\ncdata &lt;- read_csv(\"data/final_merged_data.csv\")\n\n\nRenaming Variable\nTo simplify and standardize the dataset for analysis, we renamed several lengthy variable names into shorter, more interpretable labels using the rename() function.This improves code readability and makes referencing variables in models and visualizations easier.\n\ncdata &lt;- cdata %&gt;%\n  rename(\n    BasicSanitation = `People using at least basic sanitation services (% of population)`,\n    BasicWater = `People using at least basic drinking water services (% of population)`,\n    OpenDefecation = `People practicing open defecation (% of population)`,\n    WaterStress = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`,\n    WaterProductivity = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`,\n    HepatitisA = `Acute hepatitis A`,\n    Diarrhea = `Diarrheal diseases`,\n    Typhoid = `Typhoid fever`,\n    Region = `World Bank Regions`)\n\n\n\nChecking for missing\nThe code table(index(cdata), useNA = \"ifany\") is checking for missing values (NA) in the index of a panel data frame.\n\ntable(index(cdata), useNA = \"ifany\")\n\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2113 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126 2127 2128 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 2206 2207 2208 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1"
  },
  {
    "objectID": "Prototype/PML.html#converting-data-structure",
    "href": "Prototype/PML.html#converting-data-structure",
    "title": "Panel Data Modeling",
    "section": "3.1 Converting Data structure",
    "text": "3.1 Converting Data structure\nTo prepare for panel data regression analysis, the dataset was transformed into a pdata.frame structure using the plm package. This format designates Region as the cross-sectional unit and year as the time index, allowing us to apply fixed-effects or random-effects models that account for both temporal dynamics and regional heterogeneity.\n\npdata &lt;- pdata.frame(cdata, index = c(\"Region\", \"year\"))\n\n3.2 Renaming Columns in pdata\nTo facilitate analysis and improve code clarity, all variables in the panel dataset were renamed using short, descriptive labels. This standardization ensures compatibility with panel regression functions and enhances readability when interpreting model outputs.\n\ncolnames(pdata) &lt;- c(\n  \"Country\",\n  \"Year\",\n  \"WaterStress\",\n  \"OpenDefecation\",\n  \"BasicWater\",\n  \"BasicSanitation\",\n  \"PopulationDensity\",\n  \"TotalPopulation\",\n  \"WaterProductivity\",\n  \"HepatitisA\",\n  \"Diarrhea\",\n  \"Typhoid\",\n  \"Region\"\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html",
    "href": "Prototype/Geospatial Data Analysis_P1.html",
    "title": "Geospatial Data Analysis",
    "section": "",
    "text": "pacman::p_load(tidyverse,readxl,ggcorrplot, ggstatsplot, GGally,\n              SmartEDA, easystats, gtsummary, ggstatsplot,\n              parallelPlot,treemap, treemapify, tidyverse,tibble, d3treeR,ggstatsplot,ggdist, ggridges, ggthemes,\n               colorspace)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#importing-the-data-set",
    "href": "Prototype/Geospatial Data Analysis_P1.html#importing-the-data-set",
    "title": "Geospatial Data Analysis",
    "section": "2.1 Importing the data set",
    "text": "2.1 Importing the data set\nIn the code chunk below, read_csv() of readr is used to import WDI Country Data.csv into R and parsed it into tibble R data.frame format.\n\nwater_indicators &lt;- read.csv(\"WDICountryData.csv\")"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#data-summary",
    "href": "Prototype/Geospatial Data Analysis_P1.html#data-summary",
    "title": "Geospatial Data Analysis",
    "section": "2.2 Data summary",
    "text": "2.2 Data summary\nFunction ExpData() comes from the SmartEDA package in R and The type = 2 argument specifies the type of analysis to perform.\n\nwater_indicators %&gt;%\n  ExpData(type = 2)\n\n   Index  Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1    Series.Name     character     2662             3          0.001\n2      2    Series.Code     character     2660             5          0.002\n3      3   Country.Name     character     2660             5          0.002\n4      4   Country.Code     character     2660             5          0.002\n5      5         Region     character     2660             5          0.002\n6      6 X2000..YR2000.     character     2660             5          0.002\n7      7 X2001..YR2001.     character     2660             5          0.002\n8      8 X2002..YR2002.     character     2660             5          0.002\n9      9 X2003..YR2003.     character     2660             5          0.002\n10    10 X2004..YR2004.     character     2660             5          0.002\n11    11 X2005..YR2005.     character     2660             5          0.002\n12    12 X2006..YR2006.     character     2660             5          0.002\n13    13 X2007..YR2007.     character     2660             5          0.002\n14    14 X2008..YR2008.     character     2660             5          0.002\n15    15 X2009..YR2009.     character     2660             5          0.002\n16    16 X2010..YR2010.     character     2660             5          0.002\n17    17 X2011..YR2011.     character     2660             5          0.002\n18    18 X2012..YR2012.     character     2660             5          0.002\n19    19 X2013..YR2013.     character     2660             5          0.002\n20    20 X2014..YR2014.     character     2660             5          0.002\n21    21 X2015..YR2015.     character     2660             5          0.002\n22    22 X2016..YR2016.     character     2660             5          0.002\n23    23 X2017..YR2017.     character     2660             5          0.002\n24    24 X2018..YR2018.     character     2660             5          0.002\n25    25 X2019..YR2019.     character     2660             5          0.002\n26    26 X2020..YR2020.     character     2660             5          0.002\n27    27 X2021..YR2021.     character     2660             5          0.002\n   No_of_distinct_values\n1                     13\n2                     11\n3                    267\n4                    267\n5                      8\n6                   1856\n7                   1870\n8                   1886\n9                   1886\n10                  1894\n11                  1915\n12                  1940\n13                  1948\n14                  1973\n15                  1980\n16                  2004\n17                  2023\n18                  2041\n19                  2050\n20                  2054\n21                  2047\n22                  2044\n23                  2032\n24                  2008\n25                  1993\n26                  1965\n27                  1945"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#data-cleaning",
    "href": "Prototype/Geospatial Data Analysis_P1.html#data-cleaning",
    "title": "Geospatial Data Analysis",
    "section": "2.3 Data Cleaning",
    "text": "2.3 Data Cleaning\n\nwater_indicators[6:27] &lt;- lapply(water_indicators[6:27], function(x) as.numeric(as.character(x)))\n\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\nWarning in FUN(X[[i]], ...): NAs introduced by coercion\n\n\nChanging column name\n\nwater_long &lt;- water_indicators %&gt;%\n  pivot_longer(\n    cols = starts_with(\"X\"),             \n    names_to = \"Year\",\n    values_to = \"Value\"\n  )\n\n\nwater_long &lt;- water_long %&gt;%\n  mutate(Year = gsub(\"X(\\\\d{4})\\\\.\\\\..*\", \"\\\\1\", Year),\n         Year = as.numeric(Year),\n         Value = as.numeric(Value))  \n\nFirst, we will select latest records in 2021 for nine indicator.\n\nwater_long_selected &lt;- water_long %&gt;%\n  filter(Year == 2021)\n\n\nwater_long_selected[water_long_selected == \"..\"] &lt;- NA\nwater_long_selected[water_long_selected == \"#N/A\"] &lt;- NA\nwater_long_selected[water_long_selected == \"\"] &lt;- NA"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#designing-a-static-treemap",
    "href": "Prototype/Geospatial Data Analysis_P1.html#designing-a-static-treemap",
    "title": "Geospatial Data Analysis",
    "section": "3.1 Designing a static treemap",
    "text": "3.1 Designing a static treemap\ntreemap package is a R package specially designed to offer great flexibility in drawing treemaps. The core function, namely: treemap() offers at least 43 arguments. In this section, we will only explore the major arguments for designing elegent and yet truthful treemaps.\n\nunique(water_long_selected[[1]])\n\n [1] \"Population, total\"                                                                               \n [2] \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\"  \n [3] \"People using at least basic drinking water services (% of population)\"                           \n [4] \"People using safely managed drinking water services (% of population)\"                           \n [5] \"People with basic handwashing facilities including soap and water (% of population)\"             \n [6] \"Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\"\n [7] \"People using at least basic sanitation services (% of population)\"                               \n [8] \"People using safely managed sanitation services (% of population)\"                               \n [9] \"People practicing open defecation (% of population)\"                                             \n[10] \"Population density (people per sq. km of land area)\"                                             \n[11] NA                                                                                                \n[12] \"Data from database: World Development Indicators\"                                                \n[13] \"Last Updated: 01/28/2025\"                                                                        \n\n\nNext, reshape the data for 2021 and change data type\n\nwater_long_selected_reshape &lt;- water_long_selected %&gt;%\n  select(Country = Country.Name, Region, Variable = Series.Name, Value) %&gt;%\n  pivot_wider(names_from = Variable, values_from = Value) %&gt;%\n  drop_na(\"Region\")\n\nWarning: Values from `Value` are not uniquely identified; output will contain list-cols.\n• Use `values_fn = list` to suppress this warning.\n• Use `values_fn = {summary_fun}` to summarise duplicates.\n• Use the following dplyr code to identify duplicates.\n  {data} |&gt;\n  dplyr::summarise(n = dplyr::n(), .by = c(Country, Region, Variable)) |&gt;\n  dplyr::filter(n &gt; 1L)\n\n\n\nwater_long_selected_reshape$`Population, total` &lt;- as.numeric(gsub(\",\", \"\", water_long_selected_reshape$`Population, total`))"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#using-the-basic-arguments",
    "href": "Prototype/Geospatial Data Analysis_P1.html#using-the-basic-arguments",
    "title": "Geospatial Data Analysis",
    "section": "3.2 Using the basic arguments",
    "text": "3.2 Using the basic arguments\nThe code chunk below designed a treemap by using three core arguments of treemap(), namely: index, vSize and vColor.\n\n3.2.1 Visualizing Level of water stress: freshwater withdrawal as a proportion of available freshwater resources by country and region\n\nwater_long_selected_reshape_1 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\")\n\n\ntm1 &lt;- treemap(water_long_selected_reshape_1,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`,\n        type = \"index\",\n        palette=\"RdYlBu\", \n        title = \"Level of water stress, 2021\",\n        title.legend = \"Level of water stress\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.2 Visualizing Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\n\nwater_long_selected_reshape_2 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`)\n\n\ntm2 &lt;- treemap(water_long_selected_reshape_2,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`,\n        type = \"index\",\n        palette=\"RdYlBu\", \n        title = \"Water productivity, 2021\",\n        title.legend = \"Water productivity\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.3 Visualizing People using safely managed drinking water services (% of population))\n\nwater_long_selected_reshape_3 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People using safely managed drinking water services (% of population)\")\n\n\ntm3 &lt;- treemap(water_long_selected_reshape_3,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People using safely managed drinking water services (% of population)\" ,\n        type = \"index\",\n        palette=\"Blues\", \n        title = \"safely managed drinking water services, 2021\",\n        title.legend = \"People using safely managed drinking water services (% of population)\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.4 Visualizing People using at least basic drinking water services (% of population)\n\nwater_long_selected_reshape_4 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People using at least basic sanitation services (% of population)\")\n\n\ntm4 &lt;- treemap(water_long_selected_reshape_4,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People using at least basic drinking water services (% of population)\" ,\n        type = \"index\",\n        palette=\"Blues\", \n        title = \"basic drinking water services, 2021\",\n        title.legend = \"People using at least basic drinking water services\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.5 Visualizing People with basic handwashing facilities including soap and water (% of population)\n\nwater_long_selected_reshape_5 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People with basic handwashing facilities including soap and water (% of population)\")\n\n\ntm5 &lt;- treemap(water_long_selected_reshape_5,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People with basic handwashing facilities including soap and water (% of population)\" ,\n        type = \"index\",\n        palette=\"Greens\", \n        title = \"People with basic handwashing facilities, 2021\",\n        title.legend = \"People with basic handwashing facilities\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.6 Visualizing People using at least basic sanitation services (% of population)\n\nwater_long_selected_reshape_6 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People using at least basic sanitation services (% of population)\")\n\n\ntm6 &lt;- treemap(water_long_selected_reshape_6,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People using at least basic sanitation services (% of population)\" ,\n        type = \"index\",\n        palette=\"Reds\", \n        title = \"basic sanitation services, 2021\",\n        title.legend = \"People using at least basic sanitation services (% of population)\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.7 Visualizing People using safely managed sanitation services (% of population)\n\nwater_long_selected_reshape_7 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People using safely managed sanitation services (% of population)\")\n\n\ntm7 &lt;- treemap(water_long_selected_reshape_7,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People using safely managed sanitation services (% of population)\" ,\n        type = \"index\",\n        palette=\"Reds\", \n        title = \"safely managed sanitation services, 2021\",\n        title.legend = \"People using safely managed sanitation services (% of population)\"\n)\n\n\n\n\n\n\n\n\n\n\n3.2.8 Visualizing People practicing open defecation (% of population)\n\nwater_long_selected_reshape_8 &lt;- water_long_selected_reshape %&gt;%\n  drop_na(\"People practicing open defecation (% of population)\")\n\n\ntm8 &lt;- treemap(water_long_selected_reshape_8,\n        index = c(\"Region\", \"Country\"),\n        vSize = \"Population, total\",\n        vColor = \"People practicing open defecation (% of population)\" ,\n        type = \"index\",\n        palette=\"Purples\", \n        title = \"open defecation, 2021\",\n        title.legend = \"People practicing open defecation (% of population)\"\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#designing-an-interactive-treemap",
    "href": "Prototype/Geospatial Data Analysis_P1.html#designing-an-interactive-treemap",
    "title": "Geospatial Data Analysis",
    "section": "3.3 Designing An Interactive Treemap",
    "text": "3.3 Designing An Interactive Treemap\nd3tree() is used to build an interactive treemap\n\n3.3.1 Level of water stress\n\nd3tree(tm1,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.2 Water productivity\n\nd3tree(tm2,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.3 Safely managed drinking water\n\nd3tree(tm3,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.4 Basic drinking water services\n\nd3tree(tm4,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.5 Basic handwashing facilities including soap and water\n\nd3tree(tm5,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.6 At least basic sanitation services\n\nd3tree(tm6,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.7 Safely managed sanitation services\n\nd3tree(tm7,rootname = \"Worldwide\" )\n\n\n\n\n\n\n\n3.3.8 Practicing open defecation\n\nd3tree(tm8,rootname = \"Worldwide\" )"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.1 People using at least basic sanitation services (% of population)",
    "text": "4.1 People using at least basic sanitation services (% of population)\n\nwater_long_selected_reshape_27 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_27 &lt;- water_long_selected_reshape_27 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_27,\n  x = Region, \n  y = `People using at least basic sanitation services (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.2 People using safely managed sanitation services (% of population)",
    "text": "4.2 People using safely managed sanitation services (% of population)\n\nwater_long_selected_reshape_28 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_28 &lt;- water_long_selected_reshape_28 %&gt;%\n  drop_na(`People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_28,\n  x = Region, \n  y = `People using safely managed sanitation services (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.3 People using at least basic drinking water services (% of population)",
    "text": "4.3 People using at least basic drinking water services (% of population)\n\nwater_long_selected_reshape_29 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_29 &lt;- water_long_selected_reshape_29 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_29,\n  x = Region, \n  y = `People using at least basic drinking water services (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.4 People using safely managed drinking water services (% of population)",
    "text": "4.4 People using safely managed drinking water services (% of population)\n\nwater_long_selected_reshape_30 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_30 &lt;- water_long_selected_reshape_30 %&gt;%\n  drop_na(`People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_30,\n  x = Region, \n  y = `People using safely managed drinking water services (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal",
    "href": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal",
    "title": "Geospatial Data Analysis",
    "section": "4.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)",
    "text": "4.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\n\nwater_long_selected_reshape_31 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_31 &lt;- water_long_selected_reshape_31 %&gt;%\n  drop_na(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_31,\n  x = Region, \n  y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources",
    "href": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources",
    "title": "Geospatial Data Analysis",
    "section": "4.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources",
    "text": "4.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\n\nwater_long_selected_reshape_32 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_32 &lt;- water_long_selected_reshape_32 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_32,\n  x = Region, \n  y = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.7 People practicing open defecation (% of population)",
    "text": "4.7 People practicing open defecation (% of population)\n\nwater_long_selected_reshape_33 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People practicing open defecation (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_33 &lt;- water_long_selected_reshape_33 %&gt;%\n  drop_na(`People practicing open defecation (% of population)`) %&gt;%\n  mutate(\n    `People practicing open defecation (% of population)` = \n      round(as.numeric(`People practicing open defecation (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_33,\n  x = Region, \n  y = `People practicing open defecation (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population",
    "title": "Geospatial Data Analysis",
    "section": "4.8 People with basic handwashing facilities including soap and water (% of population)",
    "text": "4.8 People with basic handwashing facilities including soap and water (% of population)\n\nwater_long_selected_reshape_34 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People with basic handwashing facilities including soap and water (% of population)`) %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_34 &lt;- water_long_selected_reshape_34 %&gt;%\n  drop_na(`People with basic handwashing facilities including soap and water (% of population)`) %&gt;%\n  mutate(\n    `People with basic handwashing facilities including soap and water (% of population)` = \n      round(as.numeric(`People with basic handwashing facilities including soap and water (% of population)`), 0),\n\n  )\n\n\nggbetweenstats(\n  data = water_long_selected_reshape_34,\n  x = Region, \n  y = `People with basic handwashing facilities including soap and water (% of population)`, \n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"significant\", \n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.1 People using at least basic sanitation services (% of population)",
    "text": "5.1 People using at least basic sanitation services (% of population)\n\nggplot(water_long_selected_reshape_27, aes(x = `People using at least basic sanitation services (% of population)`)) +\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  labs(title = \"Density Plot of Basic Sanitation Access\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.2 People using safely managed sanitation services (% of population)",
    "text": "5.2 People using safely managed sanitation services (% of population)\n\nggplot(water_long_selected_reshape_28, aes(x = `People using safely managed sanitation services (% of population)`)) +\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  labs(title = \"Density Plot of safely managed sanitation services\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 66 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.3 People using at least basic drinking water services (% of population)",
    "text": "5.3 People using at least basic drinking water services (% of population)\n\nggplot(water_long_selected_reshape_29, aes(x = `People using at least basic drinking water services (% of population)`)) +\n  geom_density(fill = \"lightyellow\", alpha = 0.5) +\n  labs(title = \"Density Plot of basic drinking water services\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 13 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.4 People using safely managed drinking water services (% of population)",
    "text": "5.4 People using safely managed drinking water services (% of population)\n\nggplot(water_long_selected_reshape_30, aes(x = `People using safely managed drinking water services (% of population)`)) +\n  geom_density(fill = \"lightyellow\", alpha = 0.5) +\n  labs(title = \"Density Plot of safely managed drinking water services\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 71 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal-1",
    "title": "Geospatial Data Analysis",
    "section": "5.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)",
    "text": "5.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\n\nggplot(water_long_selected_reshape_31, aes(x = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`)) +\n  geom_density(fill = \"lightpink\", alpha = 0.5) +\n  labs(title = \"Density Plot of Water productivity\", x = \"constant 2015 US$ GDP per cubic meter of total freshwater withdrawal\", y = \"Density\")\n\nWarning: Removed 17 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources-1",
    "title": "Geospatial Data Analysis",
    "section": "5.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources",
    "text": "5.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\n\nggplot(water_long_selected_reshape_32, aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`)) +\n  geom_density(fill = \"lightpink\", alpha = 0.5) +\n  labs(title = \"Density Plot of Level of water stress\", x = \"freshwater withdrawal as a proportion of available freshwater resources\", y = \"Density\")\n\nWarning: Removed 16 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.7 People practicing open defecation (% of population)",
    "text": "5.7 People practicing open defecation (% of population)\n\nggplot(water_long_selected_reshape_33, aes(x = `People practicing open defecation (% of population)`)) +\n  geom_density(fill = \"lightgrey\", alpha = 0.5) +\n  labs(title = \"Density Plot of People practicing open defecation\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population-1",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population-1",
    "title": "Geospatial Data Analysis",
    "section": "5.8 People with basic handwashing facilities including soap and water (% of population)",
    "text": "5.8 People with basic handwashing facilities including soap and water (% of population)\n\nggplot(water_long_selected_reshape_34, aes(x = `People with basic handwashing facilities including soap and water (% of population)`)) +\n  geom_density(fill = \"lightblue\", alpha = 0.5) +\n  labs(title = \"Density Plot of basic handwashing facilities\", x = \"Percentage of Population\", y = \"Density\")\n\nWarning: Removed 113 rows containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-sanitation-services-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.1 People using at least basic sanitation services (% of population)",
    "text": "6.1 People using at least basic sanitation services (% of population)\n\nggplot(water_long_selected_reshape_27, aes(x = Region, y = `People using at least basic sanitation services (% of population)`)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Basic Sanitation Services By Region\", x = \"Region\", y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 15 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-sanitation-services-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.2 People using safely managed sanitation services (% of population)",
    "text": "6.2 People using safely managed sanitation services (% of population)\n\nggplot(water_long_selected_reshape_28, aes(x = Region, y = `People using safely managed sanitation services (% of population)`)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Safely Managed Sanitation Services By Region\", x = \"Region\", y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 66 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-at-least-basic-drinking-water-services-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.3 People using at least basic drinking water services (% of population)",
    "text": "6.3 People using at least basic drinking water services (% of population)\n\nggplot(water_long_selected_reshape_29, aes(x = Region, y = `People using at least basic drinking water services (% of population)`)) +\n  geom_boxplot(fill = \"lightyellow\") +\n  labs(title = \"Basic Drinking Water Services\", x = \"Region\", y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 13 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-using-safely-managed-drinking-water-services-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.4 People using safely managed drinking water services (% of population)",
    "text": "6.4 People using safely managed drinking water services (% of population)\n\nggplot(water_long_selected_reshape_30, aes(x = Region, y = `People using safely managed drinking water services (% of population)`)) +\n  geom_boxplot(fill = \"lightyellow\") +\n  labs(title = \"Safely Managed Drinking Water Services\", x = \"Region\", y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 71 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#water-productivity-total-constant-2015-us-gdp-per-cubic-meter-of-total-freshwater-withdrawal-2",
    "title": "Geospatial Data Analysis",
    "section": "6.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)",
    "text": "6.5 Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\n\nggplot(water_long_selected_reshape_31, aes(x = Region, y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`)) +\n  geom_boxplot(fill = \"lightpink\") +\n  labs(title = \"Water productivity\", \n       x = \"Region\", \n       y = \"constant 2015 US\\\\$ GDP per cubic meter of total freshwater withdrawal\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 17 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#level-of-water-stress-freshwater-withdrawal-as-a-proportion-of-available-freshwater-resources-2",
    "title": "Geospatial Data Analysis",
    "section": "6.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources",
    "text": "6.6 Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\n\nggplot(water_long_selected_reshape_32, aes(x = Region, \n                                           y = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`)) +\n  geom_boxplot(fill = \"lightpink\") +\n  labs(title = \"Level of water stress\", \n       x = \"Region\", \n       y = \"Freshwater withdrawal as a proportion of available freshwater resources\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 16 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-practicing-open-defecation-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.7 People practicing open defecation (% of population)",
    "text": "6.7 People practicing open defecation (% of population)\n\nggplot(water_long_selected_reshape_33, aes(x = Region, \n                                           y = `People practicing open defecation (% of population)`)) +\n  geom_boxplot(fill = \"lightgrey\") +\n  labs(title = \"People Practicing Open Defecation\", \n       x = \"Region\", \n       y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 19 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population-2",
    "href": "Prototype/Geospatial Data Analysis_P1.html#people-with-basic-handwashing-facilities-including-soap-and-water-of-population-2",
    "title": "Geospatial Data Analysis",
    "section": "6.8 People with basic handwashing facilities including soap and water (% of population)",
    "text": "6.8 People with basic handwashing facilities including soap and water (% of population)\n\nggplot(water_long_selected_reshape_34, aes(x = Region, \n                                           y = `People with basic handwashing facilities including soap and water (% of population)`)) +\n  geom_boxplot(fill = \"lightgrey\") +\n  labs(title = \"Basic Handwashing Facilities\", \n       x = \"Region\", \n       y = \"Percentage of Population\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 113 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Prototype/EDA.html",
    "href": "Prototype/EDA.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "In this section will cover the Exploratory Data Analysis (EDA)"
  },
  {
    "objectID": "Prototype/EDA.html#install-and-launch-r-packages",
    "href": "Prototype/EDA.html#install-and-launch-r-packages",
    "title": "Exploratory Data Analysis",
    "section": "2.1 Install and launch R packages",
    "text": "2.1 Install and launch R packages\nThe project uses p_loads of pacman package to check if the R packages are installed in the computer.\n\npacman::p_load(tidyverse, ggplot2, ggthemes, plotly,dplyr,purrr,broom,rlang,ggstatsplot)"
  },
  {
    "objectID": "Prototype/EDA.html#import-data",
    "href": "Prototype/EDA.html#import-data",
    "title": "Exploratory Data Analysis",
    "section": "2.2 Import Data",
    "text": "2.2 Import Data\nThis project will examine a merged dataset from World Development Indicators (WDI) from the World Bank, and Global Burden of diseases result tools from Institution for Health Metrics Evaluation. Specifically 140 countries from year 2006 to 2021 and organised into UN regions.\n\ncdata &lt;- read_csv(\"data/final_merged_data.csv\")"
  },
  {
    "objectID": "Prototype/EDA.html#overview-of-the-data",
    "href": "Prototype/EDA.html#overview-of-the-data",
    "title": "Exploratory Data Analysis",
    "section": "2.3 Overview of the data",
    "text": "2.3 Overview of the data\nThe dataset including 2,240 observations and 13 variables. Each row provides detailed yearly information for a specific country on water access, sanitation, hygiene indicators, population statistics and related health outcomes such as diarrhea, typhoid fever, and acute hepatitis A. The dataset includes both environmental indicators (e.g., water stress, basic drinking water access) and health outcome metrics, making it suitable for time-series and panel data analysis across different World Bank regions.\n\nDataset Structure\nUse str()to check the structure of the data.\n\nstr(cdata)\n\nspc_tbl_ [2,240 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Country                                                                                         : chr [1:2240] \"Arab Republic of Egypt\" \"Arab Republic of Egypt\" \"Arab Republic of Egypt\" \"Arab Republic of Egypt\" ...\n $ year                                                                                            : num [1:2240] 2006 2007 2008 2009 2010 ...\n $ Level of water stress: freshwater withdrawal as a proportion of available freshwater resources  : num [1:2240] 122 125 128 131 134 ...\n $ People practicing open defecation (% of population)                                             : num [1:2240] 1.179 1.079 0.979 0.88 0.78 ...\n $ People using at least basic drinking water services (% of population)                           : num [1:2240] 98.4 98.5 98.5 98.5 98.5 ...\n $ People using at least basic sanitation services (% of population)                               : num [1:2240] 93.1 93.4 93.7 94.1 94.4 ...\n $ Population density (people per sq. km of land area)                                             : num [1:2240] 83.1 84.7 86.3 87.9 89.6 ...\n $ Population, total                                                                               : num [1:2240] 82700403 84276225 85864789 87501636 89196072 ...\n $ Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal): num [1:2240] 3.4 3.56 3.72 3.8 3.91 ...\n $ Acute hepatitis A                                                                               : num [1:2240] 0.00894 0.00885 0.00873 0.00858 0.00845 ...\n $ Diarrheal diseases                                                                              : num [1:2240] 0.111 0.113 0.116 0.118 0.12 ...\n $ Typhoid fever                                                                                   : num [1:2240] 1.09e-04 1.03e-04 9.74e-05 9.21e-05 8.70e-05 ...\n $ World Bank Regions                                                                              : chr [1:2240] \"Middle East & North Africa\" \"Middle East & North Africa\" \"Middle East & North Africa\" \"Middle East & North Africa\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Country = col_character(),\n  ..   year = col_double(),\n  ..   `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = col_double(),\n  ..   `People practicing open defecation (% of population)` = col_double(),\n  ..   `People using at least basic drinking water services (% of population)` = col_double(),\n  ..   `People using at least basic sanitation services (% of population)` = col_double(),\n  ..   `Population density (people per sq. km of land area)` = col_double(),\n  ..   `Population, total` = col_double(),\n  ..   `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = col_double(),\n  ..   `Acute hepatitis A` = col_double(),\n  ..   `Diarrheal diseases` = col_double(),\n  ..   `Typhoid fever` = col_double(),\n  ..   `World Bank Regions` = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nColumn Names in cdata\nThe command names(cdata) in R returns a list of all column names in the cdata dataframe.\n\nnames(cdata)\n\n [1] \"Country\"                                                                                         \n [2] \"year\"                                                                                            \n [3] \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\"  \n [4] \"People practicing open defecation (% of population)\"                                             \n [5] \"People using at least basic drinking water services (% of population)\"                           \n [6] \"People using at least basic sanitation services (% of population)\"                               \n [7] \"Population density (people per sq. km of land area)\"                                             \n [8] \"Population, total\"                                                                               \n [9] \"Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)\"\n[10] \"Acute hepatitis A\"                                                                               \n[11] \"Diarrheal diseases\"                                                                              \n[12] \"Typhoid fever\"                                                                                   \n[13] \"World Bank Regions\"                                                                              \n\n\n\n\nRenaming Variable\nTo simplify and standardize the dataset for analysis, we renamed several lengthy variable names into shorter, more interpretable labels using the rename() function.This improves code readability and makes referencing variables in models and visualizations easier.\n\ncdata &lt;- cdata %&gt;%\n  rename(\n    BasicSanitation = `People using at least basic sanitation services (% of population)`,\n    BasicWater = `People using at least basic drinking water services (% of population)`,\n    OpenDefecation = `People practicing open defecation (% of population)`,\n    WaterStress = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`,\n    WaterProductivity = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`,\n    HepatitisA = `Acute hepatitis A`,\n    Diarrhea = `Diarrheal diseases`,\n    Typhoid = `Typhoid fever`,\n    Region = `World Bank Regions`)\n\n\n\nCreating Year group\nIn this step, the dataset cdata is augmented with a new variable called year_group using the mutate() and case_when() functions from the dplyr package. The result is saved as a new dataframe cdata1.\n\ncdata1 &lt;- cdata %&gt;%\n  mutate(year_group = case_when(\n    year &gt;= 2006 & year &lt;= 2010 ~ \"2006-2010\",\n    year &gt;= 2011 & year &lt;= 2015 ~ \"2011-2015\",\n    year &gt;= 2016 & year &lt;= 2021 ~ \"2016-2021\",\n    TRUE ~ NA_character_\n  ))"
  },
  {
    "objectID": "Prototype/EDA.html#violin-plot",
    "href": "Prototype/EDA.html#violin-plot",
    "title": "Exploratory Data Analysis",
    "section": "3.1 Violin Plot",
    "text": "3.1 Violin Plot\nThis code block defines two functions: create_comprehensive_plots() and save_plots(). Together, they automate the generation and export of a large set of statistically annotated visualizations comparing multiple WASH and health outcome indicators across time periods and regions.\n\ncreate_comprehensive_plots &lt;- function(data) {\n  # Diagnostic checks\n  cat(\"Total number of rows in data:\", nrow(data), \"\\n\")\n  cat(\"Unique regions:\", paste(unique(data$Region), collapse = \", \"), \"\\n\")\n  cat(\"Unique year groups:\", paste(unique(data$year_group), collapse = \", \"), \"\\n\")\n  \n  all_vars &lt;- c(\"BasicSanitation\", \"BasicWater\", \"OpenDefecation\", \n                \"WaterStress\", \"WaterProductivity\", \n                \"HepatitisA\", \"Diarrhea\", \"Typhoid\")\n  \n  missing_vars &lt;- setdiff(all_vars, names(data))\n  if (length(missing_vars) &gt; 0) {\n    stop(\"Missing variables: \", paste(missing_vars, collapse = \", \"))\n  }\n  \n  regions &lt;- unique(data$Region)\n  plot_list &lt;- list()\n  plot_counter &lt;- 1\n  \n  for (var in all_vars) {\n    for (reg in regions) {\n      region_data &lt;- data %&gt;% \n        filter(Region == reg) %&gt;%\n\n        filter(!is.na(year_group) & !is.na(!!sym(var)))\n      \n      if (nrow(region_data) == 0) {\n        warning(paste(\"No data for\", var, \"in\", reg))\n        next\n      }\n      \n      tryCatch({\n        p &lt;- ggbetweenstats(\n          data = region_data,\n          x = year_group,\n          y = !!sym(var),\n          type = \"parametric\",\n          messages = FALSE,\n          mean.ci = TRUE,\n          pairwise.comparisons = TRUE,\n          pairwise.display = \"significant\",\n          title = paste(\"Comparison of\", var, \"in\", reg),\n          xlab = \"Year Group\",\n          ylab = var\n        )\n        \n        plot_list[[plot_counter]] &lt;- p\n        print(p)\n        \n        plot_counter &lt;- plot_counter + 1\n      }, error = function(e) {\n        warning(paste(\"Error plotting\", var, \"in\", reg, \":\", e$message))\n      })\n    }\n  }\n  \n  return(plot_list)\n}\n\n\nplots &lt;- create_comprehensive_plots(cdata1)\n\nTotal number of rows in data: 2240 \nUnique regions: Middle East & North Africa, East Asia & Pacific, Latin America & Caribbean, Sub-Saharan Africa, North America, Europe & Central Asia, South Asia \nUnique year groups: 2006-2010, 2011-2015, 2016-2021 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError in optim(0, Qg, control = list(fnscale = -1), gr = dQg, method = \"BFGS\",  : \n  initial value in 'vmmin' is not finite"
  },
  {
    "objectID": "MeetingMinutes.html",
    "href": "MeetingMinutes.html",
    "title": "Meeting Minutes",
    "section": "",
    "text": "Meeting Minutes 1\nDate: March 11, 2025\nTime: 14:00 - 17:30\nIn Attendance: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda:\n\nDiscussion on the project topic\nDivision of tasks for project proposal\nAction Items\n\n1. Discussion on the Project Topic\nPrior to the meeting, we reviewed senior work and explored possible topic areas.\nProposed Ideas\nXinyue:\n\nTropical rainforest dynamics coverage analysis (rejected due to lack of data)\nSDG Goal 2 - Zero Hunger, focusing on food waste and world hunger statistics (initially agreed upon but later rejected due to difficulties collecting food waste data)\nWorld health issues (considered but rejected as most data only covered 2019 and 2022 with many missing values, making time series forecasting difficult)\n\nJing:\n\nSingapore population demographics analysis and forecast (rejected due to decreasing fertility rates and unpredictable immigration numbers)\nGerman population demographic shift analysis alongside policies for foreigners and immigrants (rejected due to unfamiliarity with German policies)\nWorld GDP analysis and time series forecast (rejected due to varying industry focuses across countries and the associated workload\nThe future of AI and workplace (rejected due to limited available data)\n\nMeihao:\n\nMaritime port import/export analysis focusing on Singapore’s trading relationships (rejected due to unclear motivation)\nTourism and CPI/exchange rate analysis for seasonal changes and tourist season forecasting (initially agreed upon but rejected due to difficulties obtaining historical exchange rates)\nHow do jet fuel price effect Singapore Airline Group’s Revenue( rejected due to difficulties obtaining historical Oil Price for a reliable source)\n\nSelected Topic\nAfter reviewing Xinyue’s data, the team generated the idea of exploring water-related issues. Relevant datasets were found, and the topic was selected. The team agreed to work on water sanitation issues such as:\n\nSufficient data is available for analysis\nThe topic includes appropriate variables for study\n\n2. Division of Tasks for Project Proposal\nAfter reviewing senior work, the team decided on the proposal structure and distributed responsibilities:\nJing:\n\nMotivation\nObjectives\nProblem statement\nData\nGitHub and Netlify setup\n\nXinyue:\n\nSketch of the prototypes and Explanation\nExpected contribution and impact\nConclusion\n\nMeihao:\n\nMethodology\nProject schedule\nRelevant work\nR package list\n\n3. Action Items\n\nAll members to push their work to GitHub for peer review\nJing will handle the final submission on Wednesday\n\n\n\nMeeting Minutes 2\nDate: March 17, 2025\nTime: 21:00 - 21:30\nAttendees: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda\n\nDiscussion on Proposal Feedback\nAction Items\n\n1. Discussion on Proposal Feedback\nIdentified Issues from Feedback\n\nLack of clear allocation of analysis modules to team members.\nConcerns about the appropriateness of the suggested dataset.\nRecommendation to use web-based predictive modeling or machine learning forecasting instead of traditional time series analysis.\n\nDecisions & Next Steps\n1. Allocation of Analysis Modules\nAfter discussion, the following responsibilities were assigned:\n\nJing: Data cleaning and data processing\nXinyue: Geospatial data analysis\nMeihao: Forecasting\n\nAll Members: Collaborate on Confirmatory Data Analysis (CDA)\n2. Dataset Appropriateness\nThe team realized that for geospatial data analysis, the dataset needs to be in shp, API, or other suitable formats instead of the current CSV format.\n\nSolution: It was found CSV files can be converted to shp or JSON for geospatial analysis after research.\n\nMeihao will test whether the files can be converted to shp or Json.\nJing and Xinyue will focus on selecting relevant variables and assessing the dataset’s suitability\n\n\n3. Forecasting Approach\n\nThe team agreed to shift from traditional time series forecasting to web-based predictive modeling or machine learning forecasting.\nThe specific methodology will be further discussed and finalized in upcoming meetings.\n\n2. Action Items\n\n\n\n\n\n\n\n\nTask\nResponsible\nDeadline\n\n\n\n\nTest CSV-to-SHP/JSON conversion\nMeihao\nNext meeting\n\n\nSelect relevant variables for analysis\nJing & Xinyue\nNext meeting\n\n\nResearch and discuss predictive modeling techniques\nAll Members\nOngoing\n\n\n\nNext Steps: The team will review progress in the next meeting and finalize the predictive modeling approach.\n\n\nMeeting Minutes 3\nDate: March 13, 2025\nTime: 11:20 – 12:30\nAttendees: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda\n\nDiscussion after consultation with Dr. Kam\nAction Items\n\n1. Discussion after Consultation with Dr. Kam\nThe meeting focused on addressing dataset and methodology concerns raised during the consultation with Dr. Kam. Key takeaways include:\nDataset Concerns\n\nThe current world-level dataset contains many missing values, making a choropleth map less meaningful.\nA tree map would be a more appropriate visualization if the group continues using this dataset.\nChoropleth maps are better suited for national-level data.\n\nMethodology Recommendations\n\nFor time series and regression analysis, Dr. Kam recommended using:\n\nplm for time series regression analysis.\nExPanDa for visualization.\n\nIf continuing with the current data set, the Confirmatory Data Analysis (CDA) should focus on a regional perspective or developing countries or other categorization rather than global trends.\n\nTeam Discussion & Next Steps\n\nJing strongly advocated for continuing with the current dataset.\nXinyue and Meihao suggested exploring regional or national-level data for more meaningful insights.\n\nThe group agreed to conduct further research before making a final decision.\n2. Action Items\n\n\n\n\n\n\n\n\nTask\nAssigned To\nDeadline\n\n\nContinue variable selection using the current dataset\nJing\nOngoing\n\n\nResearch alternative datasets (regional/national level)\nMeihao & Xinyue\nNext meeting\n\n\nEvaluate dataset feasibility and finalize the decision\nEntire Team\nNext meeting\n\n\n\n\n\nMeeting Minutes 4\nDate: March 14, 2025\nTime: 21:00 – 21:30\nAttendees: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda\nProject progress check-in and task realignment based on updated dataset availability\n1. Team Progress Update and Dataset Decision\nThe meeting began with updates from each group member on their progress and any data challenges faced.\nRegional Data Outcome\n\nXinyue and Meihao were initially unable to locate appropriate region-specific datasets. However, Xinyue later discovered that disease outcome data grouped by WHO regions was available. After reviewing its structure and coverage, the group agreed that future analyses should shift to a regional-level focus based on WHO regional classifications.\nTask Allocation and Module Development\n\nEach member’s task was clarified and finalized as follows:\n- Jing will be responsible for Treemap visualization and corresponding data exploration\n- Meihao will focus on the Panel Data Model (PLM)\n- Xinyue will work on the Confirmatory Data Analysis (CDA)\n\nThe team agreed to work independently on their respective modules, with plans to reconvene after individual components are complete to integrate them into a full Shiny App.\n2. Action Items\n\n\n\n\n\n\n\n\nTask\nAssigned To\nDeadline\n\n\nPerform\n\n\n\n\ntreemap visualization and exploratory analysis\nJing\nNext meeting\n\n\nBuild panel data regression model (PLM)\nMeihao\nNext meeting\n\n\nConduct confirmatory data analysis (CDA)\nXinyue\nNext meeting\n\n\nIntegrate WHO regional groupings into analysis workflow\nEntire Team\nNext meeting\n\n\nCombine modules into a unified Shiny App\nEntire Team\nAfter individual tasks complete\n\n\n\n\n\nMeeting Minutes 5\nDate: April 1, 2025\nTime: 15:00 – 17:00\nAttendees: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda\nPost-submission review and feedback discussion with Dr. Kam on the completed Shiny App\n1. Consultation Review and Feedback Summary\nAfter the completion of the initial version of the Shiny App, the group met with Dr. Kam to gather feedback and professional advice.\n\nKey Issues Identified:\n\n- Inconsistency in analysis level:\n  The current analysis mixes regional-level and country-level indicators, which makes interpretation unclear. Dr. Kam advised that all parts of the analysis should be aligned to the same level of granularity — either fully regional or fully country-level.\n\n- Visualization problems:\n  Several visualizations were flagged as ineffective or unclear. They were considered poor in presentation and not meaningful for analysis. The group agreed that these need to be redesigned and improved for clarity and analytical value.\n\n  All members will be responsible for improving their own visualization components, including:\n  - Jing’s treemap\n  - Xinyue’s CDA visualizations\n  - Meihao’s PLM visual outputs\n\n- PLM Model clarity:\n  The current PLM component focuses too much on results without clearly explaining or presenting the model structure itself. This part will be revised to better reflect how the model is built, not just the output.\n\n- WHO region naming issue:\n  The current WHO region labels were noted as inappropriate or inconsistent. The team will need to either reassign the region groupings or re-arrange the dataset to resolve the naming issues.\n2. Action Items\n\n\n\n\n\n\n\n\nTask\nAssigned To\nDeadline\n\n\nDecide whether to adopt country-level or regional-level analysis\nEntire Team\nNext meeting\n\n\nReformat and correct regional naming in the dataset\nMeihao & Xinyue\nNext meeting\n\n\nRevise treemap visualization for clarity\nJing\nNext meeting\n\n\nRevise CDA visualization component\nXinyue\nNext meeting\n\n\nRevise PLM model to focus on structure and improve output presentation\nMeihao\nNext meeting\n\n\nAll members to review and improve their own visualizations\nEntire Team\nNext meeting\n\n\n\n\n\nMeeting Minutes 6\nDate: April 1, 2025\nTime: 21:30 – 21:50\nAttendees: Fan Jing, Lin Xinyue, Lai Meihao\nAgenda\nReview of new country-level disease dataset and planning for final integration and poster preparation\n1. Dataset Update and Task Realignment\nThe team identified a new disease dataset at the country level, which can be aligned with UN region groupings, allowing for both country-level and regional-level analysis. The team agreed to move forward with this dataset, and integrate it with the existing WDI dataset.\n\nDue to missing values, some variables will be removed and the analysis time range will be adjusted to 2006–2021 for consistency and completeness.\n\nIn light of the data change:\n- The treemap visualization will be replaced with an EDA module for trend review of all variables\n- The team agreed to continue working on their respective modules using the new data\n- Aiming to finish by April 3, allowing time for poster preparation\n\nPoster Plan:\n- Xinyue will be responsible for assembling the poster\n- Jing and Meihao will support by providing graphs and written explanation for their parts\n2. Action Items\n\n\n\n\n\n\n\n\nTask\nAssigned To\nDeadline\n\n\nIntegrate\n\n\n\n\nnew country-level disease data with WDI\nEntire Team\nApril 3\n\n\nAdjust time range and remove variables with missing values\nEntire Team\nApril 3\n\n\nReplace treemap with trend-based EDA\nJing\nApril 3\n\n\nUpdate CDA and PLM modules based on new dataset\nXinyue & Meihao\nApril 3\n\n\nAssemble project poster\nXinyue\nApril 3\n\n\nProvide visualizations and explanations for poster\nJing & Meihao\nApril 3"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About this project",
    "section": "",
    "text": "This project was developed for ISSS608: Visual Analytics and Applications during the January Term of the Academic Year 2025-26 at Singapore Management University, under the guidance of Dr. Kam Tin Seong, Assistant Professor of Information Systems.\nMember:\n\nFAN JING\nLAI MEIHAO\nLIN XINYUE"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blue Pulse",
    "section": "",
    "text": "🌍 Project Overview\nAccess to safe water and sanitation remains one of the most pressing global health challenges. As of 2022, 2.2 billion people lacked safely managed drinking water, and 3.5 billion lacked access to safe sanitation. These gaps contribute significantly to the spread of waterborne diseases such as diarrhea, typhoid, and hepatitis, especially in regions with underdeveloped infrastructure and fragile public health systems.\nDespite global efforts under Sustainable Development Goal 6 (SDG 6) — which aims for universal access to clean water and sanitation — progress has been uneven and insufficient, underscoring the need for data-driven strategies to address widening global disparities.\n\n\n🎯 Objective\nThis project aims to:\n\nUncover hidden patterns in water and sanitation access and their link to disease incidence,\nAnalyze temporal and regional disparities in water infrastructure and health outcomes,\nUncover key drivers of waterborne disease using panel data modeling and interactive data visualization tools.\n\n\n\n✅ Key Outcomes\n\nSanitation access showed strong positive correlation with reduced diarrhea and typhoid incidence.\nOpen defecation was consistently associated with higher disease rates, highlighting it as a significant public health risk.\nBasic water and sanitation services significantly reduced disease burden, especially after 2010.\nRegional disparities remain stark, with Sub-Saharan Africa and South Asia showing lower access and higher disease incidence compared to other regions.\nDeveloped an interactive Shiny app for exploring disease-WASH relationships by region, year, and indicator."
  },
  {
    "objectID": "Prototype/CDA.html",
    "href": "Prototype/CDA.html",
    "title": "Confirmatory data analysis",
    "section": "",
    "text": "The purpose of this analysis is to explore the relationship between water quality indicators and disease rates across different WHO regions. This study examines how access to basic water services, sanitation facilities, and other water-related indicators correlate with the prevalence of waterborne diseases such as typhoid, diarrhea, and hepatitis A. By understanding these relationships, we can identify potential interventions to reduce disease burden in affected regions."
  },
  {
    "objectID": "Prototype/CDA.html#distribution-of-disease-rates-by-region",
    "href": "Prototype/CDA.html#distribution-of-disease-rates-by-region",
    "title": "Confirmatory data analysis",
    "section": "3.1 Distribution of Disease Rates by Region",
    "text": "3.1 Distribution of Disease Rates by Region\nDistribution of Typhoid Rates by WHO Region\n\nggplot(typhoid, \n       aes(x = Value, \n           y = Region)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 0.01,  \n    fill = lighten(\"#7097BB\", 0.3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Typhoid Rate\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(\n    name = NULL,\n    expand = expansion(add = c(0.2, 2.6))\n  ) +\n  theme_ridges() +\n  labs(title = \"Distribution of Typhoid Rates by WHO Region\")\n\n\n\n\n\n\n\n\nDistribution of Typhoid Rates by WHO Region-Raincloud Plot\n\nggplot(diarrhea, \n       aes(x = Region, \n           y = Value)) +\n  stat_halfeye(\n    adjust = 0.9,              \n    justification = -0.25,\n    .width = 0,\n    point_colour = NA,\n    fill = \"#7097BB\"\n  ) +\n  geom_boxplot(\n    width = 0.15,\n    outlier.shape = NA,\n    alpha = 0.6\n  ) +\n  stat_dots(\n    side = \"left\",\n    justification = 2.2,\n    binwidth = 0.08,          \n    dotsize = 2.2,\n    color = \"#7097BB\",\n    alpha = 0.9\n  ) +\n  coord_flip() +\n  theme_economist() +\n  labs(\n    title = \"Diarrhea Rates by WHO Region\"\n  )\n\n\n\n\n\n\n\n\nDistribution of Hepatitis A by WHO Region-Quantile Distribution\n\nggplot(hepatitiesA,\n       aes(x = Value, \n           y = Region, \n           fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 6,\n    quantile_lines = TRUE,\n    scale = 2,\n    alpha = 0.9\n  ) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  labs(\n    title = \"Hepatitis Rate Distribution by WHO Region\"\n  ) +\n  theme_ridges()\n\nWarning: `stat(quantile)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(quantile)` instead.\n\n\nPicking joint bandwidth of 0.0208\n\n\n\n\n\n\n\n\n\n\n\nRidge Density Plots It Shows disease rates distribution across WHO regions Advantage and is easier to compare regions and see data spread\nRain-cloud Plots It Combines density, boxplot, and points in one plot Advantage which Shows the complete data picture in single view\nQuantile Distribution Plots By using colors to show different data levels to makes it easy to see where most values are located"
  },
  {
    "objectID": "Prototype/CDA.html#time-trend-analysis",
    "href": "Prototype/CDA.html#time-trend-analysis",
    "title": "Confirmatory data analysis",
    "section": "3.2 Time Trend Analysis",
    "text": "3.2 Time Trend Analysis\nTrend of Diarrhea Rate Over Time by Region\n\ntrend_data1 &lt;- merged_data %&gt;%\n  filter(!is.na(DiarrheaRate)) %&gt;%\n  group_by(Region, Year) %&gt;%\n  summarise(mean_disease = mean(DiarrheaRate, na.rm = TRUE), .groups = \"drop\")\n\n\nggplot(trend_data1, aes(x = Year, y = mean_disease, color = Region)) +\n  geom_line(size = 1) +\n  geom_smooth(method = \"lm\", se = FALSE, linetype = \"dashed\") +\n  labs(title = \"Trend of Diarrhea Rate Over Time by Region\",\n       y = \"Mean Diarrhea Rate (%)\",\n       x = \"Year\") +\n  theme_minimal()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nTrends of Unsafe Water Risk by Region\n\ntrend_data2 &lt;- merged_data %&gt;%\n  filter(!is.na(UnsafeRisk)) %&gt;%\n  group_by(Region, Year) %&gt;%\n  summarise(mean_disease = mean(UnsafeRisk, na.rm = TRUE), .groups = \"drop\")\n\nggplot(trend_data2, aes(x = Year, y = mean_disease)) +\n  geom_line(color = \"steelblue\") +\n  geom_smooth(method = \"lm\", se = FALSE, linetype = \"dashed\") +\n  facet_wrap(~ Region) +\n  labs(title = \"Time Trends of Unsafe Water Risk by Region\", \n       y = \"Unsafe Water Risk\", \n       x = \"Year\") +\n  theme_bw()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nLine Plots with Trend Lines It can easier to see if disease is increasing or decreasing over time\nFaceted Time Series Shows separate time trends for each region which may allow to compare different regions’ patterns clearly"
  },
  {
    "objectID": "Prototype/Forcasting.html",
    "href": "Prototype/Forcasting.html",
    "title": "Health Trend Analysis",
    "section": "",
    "text": "In this analysis, I will explore the forecasting of health outcomes related to WASH (Water, Sanitation, and Hygiene) indicators using Panel Linear Models (PLM) and Time-series analysis (ARIMA). The goal is to project future trends in diseases such as Diarrhea, Typhoid, and Hepatitis across different WHO regions, based on the impact of WASH-related factors like water access, sanitation, and hygiene practices."
  },
  {
    "objectID": "Prototype/Forcasting.html#install-and-launch-r-packages",
    "href": "Prototype/Forcasting.html#install-and-launch-r-packages",
    "title": "Health Trend Analysis",
    "section": "2.1 Install and launch R packages",
    "text": "2.1 Install and launch R packages\nThe project uses p_load() of pacman package to check if the R package are installed in the computer.\nThe following code chunk is used to install and launch the R packages.\n\npacman::p_load(tidyverse, ggplot2, plm,ExPanDaR,lubridate, ggthemes, plotly,dplyr,purrr,forecast)"
  },
  {
    "objectID": "Prototype/Forcasting.html#import-data",
    "href": "Prototype/Forcasting.html#import-data",
    "title": "Health Trend Analysis",
    "section": "2.2 Import Data",
    "text": "2.2 Import Data\nThe below code chunk use read_csv() to read the csv file into R as a data frame\n\nmerged_data &lt;- read_csv(\"data/merged_data.csv\")"
  },
  {
    "objectID": "Prototype/Forcasting.html#overview-of-the-data",
    "href": "Prototype/Forcasting.html#overview-of-the-data",
    "title": "Health Trend Analysis",
    "section": "2.3 Overview of the data",
    "text": "2.3 Overview of the data\n\nDataset Structure\nThe below code chunk check the structure of the data.\n\nglimpse(merged_data)\n\nRows: 1,232\nColumns: 8\n$ Region        &lt;chr&gt; \"Region of the Americas\", \"Region of the Americas\", \"Reg…\n$ Year          &lt;dbl&gt; 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 20…\n$ TyphoidRate   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ DiarrheaRate  &lt;dbl&gt; 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.88, 5.…\n$ HepatitisRate &lt;dbl&gt; 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.…\n$ UnsafeRisk    &lt;dbl&gt; 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.…\n$ Series.Name   &lt;chr&gt; \"Level of water stress: freshwater withdrawal as a propo…\n$ AvgValue      &lt;dbl&gt; 1.308801e+01, 8.252346e+00, 8.867545e+01, 7.710693e+01, …\n\nhead(merged_data)\n\n# A tibble: 6 × 8\n  Region      Year TyphoidRate DiarrheaRate HepatitisRate UnsafeRisk Series.Name\n  &lt;chr&gt;      &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;      \n1 Region of…  2000           0         5.88          0.38          1 Level of w…\n2 Region of…  2000           0         5.88          0.38          1 People pra…\n3 Region of…  2000           0         5.88          0.38          1 People usi…\n4 Region of…  2000           0         5.88          0.38          1 People usi…\n5 Region of…  2000           0         5.88          0.38          1 People usi…\n6 Region of…  2000           0         5.88          0.38          1 People usi…\n# ℹ 1 more variable: AvgValue &lt;dbl&gt;"
  },
  {
    "objectID": "Prototype/Forcasting.html#missing-data",
    "href": "Prototype/Forcasting.html#missing-data",
    "title": "Health Trend Analysis",
    "section": "3.1 Missing Data",
    "text": "3.1 Missing Data\nThe below code chunk of is.na() to check the missing values in the merged_data frame, and returns a logical matrix( or vector, depending on the data structure. sum() function calculate the sum of the elements of the logical matrix or vector.\n\nsum(is.na(merged_data))\n\n[1] 0\n\n\nThe result of zero indicate that there no missing in the merge dataset."
  },
  {
    "objectID": "Prototype/Forcasting.html#duplicate-value",
    "href": "Prototype/Forcasting.html#duplicate-value",
    "title": "Health Trend Analysis",
    "section": "3.2 Duplicate Value",
    "text": "3.2 Duplicate Value\nThe duplicated() function checks for duplicate rows in the merged_data frame.\n\nsum(duplicated(merged_data))\n\n[1] 0\n\n\nThe result indicate that there is no duplicate in the merged_data."
  },
  {
    "objectID": "Prototype/Forcasting.html#overview-of-plm",
    "href": "Prototype/Forcasting.html#overview-of-plm",
    "title": "Health Trend Analysis",
    "section": "4.1 Overview of plm",
    "text": "4.1 Overview of plm\nA Panel Linear Model (PLM) is a statistical model used to analyze data that includes observations over time (time-series) and across different units (cross-sectional). This type of data, often called panel data or longitudinal data, involves multiple subjects (such as countries, individuals, or companies) observed over several time periods.\nFor this project, we are using data from the World Development Indicators (WDI) as WASH (Water, Sanitation, and Hygiene) indicators and data from the Institute for Health Metrics as health indicators. We will apply the PLM to estimate the coefficients of the WASH indicators for each health indicator. Subsequently, we will use time-series analysis to forecast trends for the health indicators, particularly disease rates, based on the coefficients obtained from the WASH indicators.\nTo apply PLM in our project, we will be using plm package in R."
  },
  {
    "objectID": "Prototype/Forcasting.html#creating-panel-data",
    "href": "Prototype/Forcasting.html#creating-panel-data",
    "title": "Health Trend Analysis",
    "section": "4.2 Creating Panel Data",
    "text": "4.2 Creating Panel Data\nBefore proceed to the PLM analysis, we will first create panel data. We will be start by understanding merged_data.\nThe below code chunk use names() function to extract the names of the columns in the merged_data.\n\nnames(merged_data)\n\n[1] \"Region\"        \"Year\"          \"TyphoidRate\"   \"DiarrheaRate\" \n[5] \"HepatitisRate\" \"UnsafeRisk\"    \"Series.Name\"   \"AvgValue\"     \n\n\nThe output shows the columns in the merged_data.\nThe below code chunk use the summary() function to provide a quick overview of each column in a dataframe.\n\nsummary(merged_data)\n\n    Region               Year       TyphoidRate       DiarrheaRate  \n Length:1232        Min.   :2000   Min.   :0.00000   Min.   : 2.72  \n Class :character   1st Qu.:2005   1st Qu.:0.00000   1st Qu.: 5.27  \n Mode  :character   Median :2010   Median :0.01500   Median : 8.80  \n                    Mean   :2010   Mean   :0.03614   Mean   :12.05  \n                    3rd Qu.:2016   3rd Qu.:0.04000   3rd Qu.:21.36  \n                    Max.   :2021   Max.   :0.22000   Max.   :22.74  \n HepatitisRate      UnsafeRisk     Series.Name           AvgValue        \n Min.   :0.2800   Min.   : 0.080   Length:1232        Min.   :        0  \n 1st Qu.:0.3700   1st Qu.: 0.290   Class :character   1st Qu.:       33  \n Median :0.4800   Median : 1.245   Mode  :character   Median :       71  \n Mean   :0.5292   Mean   : 3.470                      Mean   :  5899097  \n 3rd Qu.:0.6800   3rd Qu.: 6.607                      3rd Qu.:      104  \n Max.   :0.8300   Max.   :10.680                      Max.   :187658229  \n\n\nThis summary provides key insights into the distribution and spread of values in each of the columns. The AvgValue column, for instance, has a wide range, with very large maximum values compared to the median and first quartile. Similarly, health indicators like TyphoidRate, DiarrheaRate, and HepatitisRate show varying levels of distribution, with some regions having very low rates and others experiencing high rates.\nThe below code chunk use str() function to display the structure of the merged_data. It provides a compact overview of the data type of each column, as well as the first few entries in each column.\n\nstr(merged_data)\n\nspc_tbl_ [1,232 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Region       : chr [1:1232] \"Region of the Americas\" \"Region of the Americas\" \"Region of the Americas\" \"Region of the Americas\" ...\n $ Year         : num [1:1232] 2000 2000 2000 2000 2000 ...\n $ TyphoidRate  : num [1:1232] 0 0 0 0 0 0 0 0 0 0 ...\n $ DiarrheaRate : num [1:1232] 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.88 5.81 ...\n $ HepatitisRate: num [1:1232] 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 0.38 ...\n $ UnsafeRisk   : num [1:1232] 1 1 1 1 1 1 1 1 1 0.94 ...\n $ Series.Name  : chr [1:1232] \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\" \"People practicing open defecation (% of population)\" \"People using at least basic drinking water services (% of population)\" \"People using at least basic sanitation services (% of population)\" ...\n $ AvgValue     : num [1:1232] 13.09 8.25 88.68 77.11 61.49 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Region = col_character(),\n  ..   Year = col_double(),\n  ..   TyphoidRate = col_double(),\n  ..   DiarrheaRate = col_double(),\n  ..   HepatitisRate = col_double(),\n  ..   UnsafeRisk = col_double(),\n  ..   Series.Name = col_character(),\n  ..   AvgValue = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\nThe dataset is a spec_tbl_df (which is a specific type of tibble in R) with 1232 rows and 8 columns. The dataset includes 8 variables (columns), and it uses the spec_tbl_df class from the tibble package.\nThe below code chunk summaries the merged_data set by grouping it by Region and Year.\nThe result of this code is a new data frame, merged_data_clean, where:\n\nEach row corresponds to a unique combination of Region and Year.\nFor each Region and Year, the mean values for TyphoidRate, DiarrheaRate, HepatitisRate, and UnsafeRisk are calculated, ignoring missing values.\n\nThe code chunk below use the pivot_wider() function from the tidyverse package to transform the merged_data dataset from long format to wide format. As the WASH indicator are store in the column Series.Name.\n\nwide_data &lt;- merged_data %&gt;%\n  pivot_wider(\n    id_cols = c(Region, Year, TyphoidRate, DiarrheaRate, HepatitisRate, UnsafeRisk),\n    names_from = Series.Name,\n    values_from = AvgValue\n  )\n\nThe code chunk below creates a panel data frame using the pdata.frame() function from the plm package.\n\npdata &lt;- pdata.frame(wide_data, index = c(\"Region\", \"Year\"))\n\nThe result of this code is that the wide_data data frame is now transformed into a panel data frame, stored in the variable pdata. This allows we to perform panel data analysis using the plm package.\n\nThe pdata object will now be suitable for running panel regressions, such as fixed effects or random effects models, using functions like plm() from the plm package.\n\nThe below code chunk use colnames() function to return the column names of the pdata which is now a panel data after being converted by pdata.frame().\n\ncolnames(pdata)\n\n [1] \"Region\"                                                                                          \n [2] \"Year\"                                                                                            \n [3] \"TyphoidRate\"                                                                                     \n [4] \"DiarrheaRate\"                                                                                    \n [5] \"HepatitisRate\"                                                                                   \n [6] \"UnsafeRisk\"                                                                                      \n [7] \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\"  \n [8] \"People.practicing.open.defecation....of.population.\"                                             \n [9] \"People.using.at.least.basic.drinking.water.services....of.population.\"                           \n[10] \"People.using.at.least.basic.sanitation.services....of.population.\"                               \n[11] \"People.using.safely.managed.drinking.water.services....of.population.\"                           \n[12] \"People.using.safely.managed.sanitation.services....of.population.\"                               \n[13] \"Population.density..people.per.sq..km.of.land.area.\"                                             \n[14] \"Population..total\"                                                                               \n[15] \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\"\n[16] \"People.with.basic.handwashing.facilities.including.soap.and.water....of.population.\""
  },
  {
    "objectID": "Prototype/Forcasting.html#plm-for-coefficient-of-the-wash-variables",
    "href": "Prototype/Forcasting.html#plm-for-coefficient-of-the-wash-variables",
    "title": "Health Trend Analysis",
    "section": "4.3 PLM for coefficient of the WASH Variables",
    "text": "4.3 PLM for coefficient of the WASH Variables\nThe below code chunk fits a Fixed Effects Model also known as the ‘within’ model) using the plm function from the plm package in R analyse the relationship between DiarrheaRate and WASH indicators.\n\nmodel &lt;- plm(DiarrheaRate ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = DiarrheaRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-1.021289 -0.248422 -0.060002  0.257269  0.961836 \n\nCoefficients:\n                                                                                                   Estimate\nPeople.practicing.open.defecation....of.population.                                              -0.6755407\nPeople.using.at.least.basic.drinking.water.services....of.population.                            -1.0144098\nPeople.using.at.least.basic.sanitation.services....of.population.                                -0.1706479\nPopulation.density..people.per.sq..km.of.land.area.                                               0.0014148\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.0029523\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.0110199\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.2855646\nPeople.using.safely.managed.sanitation.services....of.population.                                -0.1302516\n                                                                                                 Std. Error\nPeople.practicing.open.defecation....of.population.                                               0.1085486\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.1014805\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.0915876\nPopulation.density..people.per.sq..km.of.land.area.                                               0.0052560\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.0011407\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.0034595\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.1001031\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.1234424\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                              -6.2234\nPeople.using.at.least.basic.drinking.water.services....of.population.                            -9.9961\nPeople.using.at.least.basic.sanitation.services....of.population.                                -1.8632\nPopulation.density..people.per.sq..km.of.land.area.                                               0.2692\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  2.5882\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    3.1854\nPeople.using.safely.managed.drinking.water.services....of.population.                             2.8527\nPeople.using.safely.managed.sanitation.services....of.population.                                -1.0552\n                                                                                                  Pr(&gt;|t|)\nPeople.practicing.open.defecation....of.population.                                              7.677e-09\nPeople.using.at.least.basic.drinking.water.services....of.population.                            &lt; 2.2e-16\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.064917\nPopulation.density..people.per.sq..km.of.land.area.                                               0.788259\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.010860\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.001849\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.005120\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.293507\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                .  \nPopulation.density..people.per.sq..km.of.land.area.                                                 \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. *  \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ** \nPeople.using.safely.managed.drinking.water.services....of.population.                            ** \nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    146.4\nResidual Sum of Squares: 21.365\nR-Squared:      0.85406\nAdj. R-Squared: 0.83798\nF-statistic: 86.3196 on 8 and 118 DF, p-value: &lt; 2.22e-16\n\n\nThe below code chunk fits a Fixed Effects Model also known as the ‘within’ model) using the plm function from the plm package in R analyse the relationship between HeptatitisRate and WASH indicators.\n\nmodel &lt;- plm(HepatitisRate ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = HepatitisRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.0677318 -0.0066636  0.0013683  0.0085389  0.0338086 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               8.5691e-03\nPeople.using.at.least.basic.drinking.water.services....of.population.                             2.3667e-02\nPeople.using.at.least.basic.sanitation.services....of.population.                                -1.1585e-02\nPopulation.density..people.per.sq..km.of.land.area.                                              -3.7942e-04\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  8.6247e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -1.0463e-03\nPeople.using.safely.managed.drinking.water.services....of.population.                            -3.6054e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                -5.7112e-04\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               3.8073e-03\nPeople.using.at.least.basic.drinking.water.services....of.population.                             3.5594e-03\nPeople.using.at.least.basic.sanitation.services....of.population.                                 3.2124e-03\nPopulation.density..people.per.sq..km.of.land.area.                                               1.8435e-04\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  4.0009e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    1.2134e-04\nPeople.using.safely.managed.drinking.water.services....of.population.                             3.5111e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                 4.3297e-03\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                               2.2507\nPeople.using.at.least.basic.drinking.water.services....of.population.                             6.6490\nPeople.using.at.least.basic.sanitation.services....of.population.                                -3.6063\nPopulation.density..people.per.sq..km.of.land.area.                                              -2.0581\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  2.1557\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -8.6230\nPeople.using.safely.managed.drinking.water.services....of.population.                            -1.0269\nPeople.using.safely.managed.sanitation.services....of.population.                                -0.1319\n                                                                                                  Pr(&gt;|t|)\nPeople.practicing.open.defecation....of.population.                                              0.0262575\nPeople.using.at.least.basic.drinking.water.services....of.population.                            9.653e-10\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0004564\nPopulation.density..people.per.sq..km.of.land.area.                                              0.0417807\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.0331398\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   3.505e-14\nPeople.using.safely.managed.drinking.water.services....of.population.                            0.3065854\nPeople.using.safely.managed.sanitation.services....of.population.                                0.8952825\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              *  \nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                              *  \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. *  \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                               \nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    0.475\nResidual Sum of Squares: 0.026284\nR-Squared:      0.94467\nAdj. R-Squared: 0.93857\nF-statistic: 251.814 on 8 and 118 DF, p-value: &lt; 2.22e-16\n\n\nThe below code chunk fits a Fixed Effects Model also known as the ‘within’ model) using the plm function from the plm package in R analyse the relationship between unsafetyRisk and WASH indicators.\n\nmodel &lt;- plm(UnsafeRisk ~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = UnsafeRisk ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-1.683001 -0.073009  0.020810  0.128213  0.580755 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               0.72708968\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.43477443\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.21651056\nPopulation.density..people.per.sq..km.of.land.area.                                               0.00037018\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.00063762\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -0.01913748\nPeople.using.safely.managed.drinking.water.services....of.population.                            -0.25010937\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.04852111\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               0.07488698\nPeople.using.at.least.basic.drinking.water.services....of.population.                             0.07001070\nPeople.using.at.least.basic.sanitation.services....of.population.                                 0.06318565\nPopulation.density..people.per.sq..km.of.land.area.                                               0.00362608\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.00078695\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    0.00238667\nPeople.using.safely.managed.drinking.water.services....of.population.                             0.06906044\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.08516212\n                                                                                                 t-value\nPeople.practicing.open.defecation....of.population.                                               9.7092\nPeople.using.at.least.basic.drinking.water.services....of.population.                             6.2101\nPeople.using.at.least.basic.sanitation.services....of.population.                                 3.4266\nPopulation.density..people.per.sq..km.of.land.area.                                               0.1021\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  0.8102\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -8.0185\nPeople.using.safely.managed.drinking.water.services....of.population.                            -3.6216\nPeople.using.safely.managed.sanitation.services....of.population.                                 0.5697\n                                                                                                  Pr(&gt;|t|)\nPeople.practicing.open.defecation....of.population.                                              &lt; 2.2e-16\nPeople.using.at.least.basic.drinking.water.services....of.population.                            8.182e-09\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0008420\nPopulation.density..people.per.sq..km.of.land.area.                                              0.9188591\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.4194354\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   8.713e-13\nPeople.using.safely.managed.drinking.water.services....of.population.                            0.0004328\nPeople.using.safely.managed.sanitation.services....of.population.                                0.5699304\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                                 \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.    \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                            ***\nPeople.using.safely.managed.sanitation.services....of.population.                                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    157.97\nResidual Sum of Squares: 10.169\nR-Squared:      0.93563\nAdj. R-Squared: 0.92854\nF-statistic: 214.394 on 8 and 118 DF, p-value: &lt; 2.22e-16\n\n\nThe below code chunk fits a Fixed Effects Model also known as the ‘within’ model) using the plm function from the plm package in R analyse the relationship between TyphoidRate and WASH indicators.\n\nmodel &lt;- plm(TyphoidRate~ \n  People.practicing.open.defecation....of.population. +\n  People.using.at.least.basic.drinking.water.services....of.population. +\n  People.using.at.least.basic.sanitation.services....of.population. +\n  Population.density..people.per.sq..km.of.land.area. +\n  Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. +\n  Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources +  # Level of water stress\n  People.using.safely.managed.drinking.water.services....of.population. +  # People using safely managed drinking water services\n  People.using.safely.managed.sanitation.services....of.population.,  # People using safely managed sanitation services\n  data = pdata,\n  model = \"within\"\n)\nsummary(model)\n\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = TyphoidRate ~ People.practicing.open.defecation....of.population. + \n    People.using.at.least.basic.drinking.water.services....of.population. + \n    People.using.at.least.basic.sanitation.services....of.population. + \n    Population.density..people.per.sq..km.of.land.area. + Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. + \n    Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources + \n    People.using.safely.managed.drinking.water.services....of.population. + \n    People.using.safely.managed.sanitation.services....of.population., \n    data = pdata, model = \"within\")\n\nBalanced Panel: n = 6, T = 22, N = 132\n\nResiduals:\n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-1.3345e-02 -1.7639e-03  3.2779e-05  1.9438e-03  6.7478e-03 \n\nCoefficients:\n                                                                                                    Estimate\nPeople.practicing.open.defecation....of.population.                                               1.5961e-02\nPeople.using.at.least.basic.drinking.water.services....of.population.                             1.8088e-02\nPeople.using.at.least.basic.sanitation.services....of.population.                                 2.4683e-03\nPopulation.density..people.per.sq..km.of.land.area.                                               9.1629e-05\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  1.1884e-05\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -4.1832e-04\nPeople.using.safely.managed.drinking.water.services....of.population.                            -4.9622e-03\nPeople.using.safely.managed.sanitation.services....of.population.                                -2.0081e-03\n                                                                                                  Std. Error\nPeople.practicing.open.defecation....of.population.                                               8.4282e-04\nPeople.using.at.least.basic.drinking.water.services....of.population.                             7.8794e-04\nPeople.using.at.least.basic.sanitation.services....of.population.                                 7.1113e-04\nPopulation.density..people.per.sq..km.of.land.area.                                               4.0810e-05\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.  8.8568e-06\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources    2.6861e-05\nPeople.using.safely.managed.drinking.water.services....of.population.                             7.7724e-04\nPeople.using.safely.managed.sanitation.services....of.population.                                 9.5846e-04\n                                                                                                  t-value\nPeople.practicing.open.defecation....of.population.                                               18.9370\nPeople.using.at.least.basic.drinking.water.services....of.population.                             22.9557\nPeople.using.at.least.basic.sanitation.services....of.population.                                  3.4710\nPopulation.density..people.per.sq..km.of.land.area.                                                2.2452\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.   1.3418\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   -15.5736\nPeople.using.safely.managed.drinking.water.services....of.population.                             -6.3844\nPeople.using.safely.managed.sanitation.services....of.population.                                 -2.0952\n                                                                                                  Pr(&gt;|t|)\nPeople.practicing.open.defecation....of.population.                                              &lt; 2.2e-16\nPeople.using.at.least.basic.drinking.water.services....of.population.                            &lt; 2.2e-16\nPeople.using.at.least.basic.sanitation.services....of.population.                                0.0007252\nPopulation.density..people.per.sq..km.of.land.area.                                              0.0266147\nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. 0.1822283\nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   &lt; 2.2e-16\nPeople.using.safely.managed.drinking.water.services....of.population.                             3.53e-09\nPeople.using.safely.managed.sanitation.services....of.population.                                0.0382947\n                                                                                                    \nPeople.practicing.open.defecation....of.population.                                              ***\nPeople.using.at.least.basic.drinking.water.services....of.population.                            ***\nPeople.using.at.least.basic.sanitation.services....of.population.                                ***\nPopulation.density..people.per.sq..km.of.land.area.                                              *  \nWater.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.    \nLevel.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources   ***\nPeople.using.safely.managed.drinking.water.services....of.population.                            ***\nPeople.using.safely.managed.sanitation.services....of.population.                                *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    0.062059\nResidual Sum of Squares: 0.001288\nR-Squared:      0.97925\nAdj. R-Squared: 0.97696\nF-statistic: 695.932 on 8 and 118 DF, p-value: &lt; 2.22e-16\n\n\nBase on the output of four model, People practicing open defecation and People using at least basic drinking water services are significant across all models, consistently showing a negative relationship with health outcomes. Level of water stress appears as significant in most models, suggesting that regions facing higher water stress tend to experience worse health outcomes. People using safely managed drinking water services has significant positive impacts on DiarrheaRate and UnsafeRisk, but it is not significant for HepatitisRate.\nThe models explaining HepatitisRate and UnsafeRisk have very high R-squared values (above 94%), suggesting that these models explain most of the variance in the respective dependent variables.The DiarrheaRate model has a slightly lower R-squared (85.4%), but still a very good fit.\nThe results show that sanitation, drinking water access, and open defecation are important factors influencing health outcomes, particularly DiarrheaRate and UnsafeRisk.Water stress plays a critical role, indicating that regions with high water stress are likely to face more health-related challenges.There is considerable variation in the impact of predictors on different health outcomes, with some predictors (e.g., People using safely managed drinking water services) being more influential for some health outcomes than others."
  },
  {
    "objectID": "Prototype/Forcasting.html#coefficient-list",
    "href": "Prototype/Forcasting.html#coefficient-list",
    "title": "Health Trend Analysis",
    "section": "4.4 Coefficient list",
    "text": "4.4 Coefficient list\nThe code chunk below create a list of coefficient for four different health outcome, DiarrheaRate, TyphoidRate, UnsafeRisk, and HepatitisRate from the fixed effects models.\n\ncoef_list &lt;- list(\n  DiarrheaRate = c(\n    OpenDefecation = -0.6755407,\n    BasicWater = -1.0144098,\n    BasicSanitation = -0.1706479,\n    WaterProductivity = 0.0029523,\n    WaterStress = 0.0110199,\n    PopulationDensity = 0.0014148,\n    SafelyManagedWater = 0.2855646,\n    SafelyManagedSanitation = -0.1302516\n  ),\n  TyphoidRate = c(\n    OpenDefecation = 0.015961,\n    BasicWater = 0.018088,\n    BasicSanitation = 0.0024683,\n    WaterProductivity = 1.1884e-05,\n    WaterStress = -4.1832e-04,\n    PopulationDensity = 9.1629e-05,\n    SafelyManagedWater = -4.9622e-03,\n    SafelyManagedSanitation = -2.0081e-03\n  ),\n  UnsafeRisk = c(\n    OpenDefecation = 0.72708968,\n    BasicWater = 0.43477443,\n    BasicSanitation = 0.21651056,\n    WaterProductivity = 0.00063762,\n    WaterStress = -0.01913748,\n    PopulationDensity = 0.00037018,\n    SafelyManagedWater = -0.25010937,\n    SafelyManagedSanitation = 0.04852111\n  ),\n  HepatitisRate = c(\n    OpenDefecation = 0.0085691,\n    BasicWater = 0.023667,\n    BasicSanitation = -0.011585,\n    WaterProductivity = 8.6247e-05,\n    WaterStress = -0.0010463,\n    PopulationDensity = -3.7942e-04,\n    SafelyManagedWater = -3.6054e-03,\n    SafelyManagedSanitation = -5.7112e-04\n  )\n)"
  },
  {
    "objectID": "Prototype/Forcasting.html#create-selected_data",
    "href": "Prototype/Forcasting.html#create-selected_data",
    "title": "Health Trend Analysis",
    "section": "5.1 Create selected_data",
    "text": "5.1 Create selected_data\nThe below code chunk use dplyr package to select all the variables that will be use for analysis in the pdata. This is done using the select() function.\n\nselected_data &lt;- pdata %&gt;%\n  select(Region, Year, TyphoidRate, DiarrheaRate, HepatitisRate, \n         UnsafeRisk, \n         \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\",\n         \"People.practicing.open.defecation....of.population.\",\n         \"People.using.at.least.basic.drinking.water.services....of.population.\",\n         \"People.using.at.least.basic.sanitation.services....of.population.\",\n         \"People.using.safely.managed.drinking.water.services....of.population.\",\n         \"People.using.safely.managed.sanitation.services....of.population.\",\n         \"Population.density..people.per.sq..km.of.land.area.\",\n         \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\")\n\n\n5.2 Converting Data type\nThe function class() and typeof() provide different types of information about the Year column in the selected_data.\n\nclass(selected_data$Year)\n\n[1] \"pseries\" \"factor\" \n\ntypeof(selected_data$Year)\n\n[1] \"integer\"\n\n\nThe below code chunk ensure that if the Year column in the selected_data is a factor it will be converted into a numeric format.\n\nselected_data$Year &lt;- as.numeric(as.character(selected_data$Year))\n\nThe below code chunk use function extract_year() that extracts a 4-digit year from a mixed string and then cleans the Year column in your selected_data dataset by applying this function. Finally, it converts the Year to a Date format representing the first day of the year.\n\nextract_year &lt;- function(x) {\n  year &lt;- str_extract(x, \"\\\\d{4}\")\n  return(as.numeric(year))\n}\n\nselected_data$Year &lt;- extract_year(selected_data$Year)\n\nselected_data$YearDate &lt;- as.Date(paste0(selected_data$Year, \"-01-01\"))\n\nThe below code chunk using str() function provides a compact display the structure of the an object, including its type and other relevant details. The str(selected_data$Year)\n\n# Check the type of the 'Year' column\nstr(selected_data$Year)\n\n 'pseries' Named num [1:132] 2000 2001 2002 2003 2004 ...\n - attr(*, \"names\")= chr [1:132] \"African Region-2000\" \"African Region-2001\" \"African Region-2002\" \"African Region-2003\" ...\n - attr(*, \"index\")=Classes 'pindex' and 'data.frame':  132 obs. of  2 variables:\n  ..$ Region: Factor w/ 6 levels \"African Region\",..: 1 1 1 1 1 1 1 1 1 1 ...\n  ..$ Year  : Factor w/ 22 levels \"2000\",\"2001\",..: 1 2 3 4 5 6 7 8 9 10 ...\n\n\n\n\n5.3 Times Series Analysis using ARIMA\nThe below code chunk perform ARIMA (Auto-Regression Integrated Moving Average) time series forecasting for WHO regions based on historical data. It generate the WASH indicators and population from 2022 to 2030.\nThe code chunk processes data region-by-region, checks the availability of necessary data, fits ARIMA models, and returns the forecasted values for the next several years, which can be used for policy planning, resource allocation, or trend analysis.\n\narima_forecast &lt;- function(data, forecast_start_year = 2022, forecast_end_year = 2030) {\n\n#define variable name \n  forecast_vars &lt;- c(\n    \"WaterStress\" = \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\",\n    \"OpenDefecation\" = \"People.practicing.open.defecation....of.population.\",\n    \"BasicWaterServices\" = \"People.using.at.least.basic.drinking.water.services....of.population.\",\n    \"BasicSanitationServices\" = \"People.using.at.least.basic.sanitation.services....of.population.\",\n    \"SafeManagedWaterServices\" = \"People.using.safely.managed.drinking.water.services....of.population.\",\n    \"SafeManagedSanitationServices\" = \"People.using.safely.managed.sanitation.services....of.population.\",\n    \"PopulationDensity\" = \"Population.density..people.per.sq..km.of.land.area.\",\n    \"WaterProductivity\" = \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\"\n  )\n  \n  # Print progress header\n  cat(\"========================================\\n\")\n  cat(\"Starting ARIMA forecasting for\", forecast_start_year, \"to\", forecast_end_year, \"\\n\")\n  cat(\"========================================\\n\\n\")\n  \n  # Verify input data\n  cat(\"Verifying input data...\\n\")\n  cat(\"Input data has\", nrow(data), \"rows and\", ncol(data), \"columns\\n\")\n  \n  # Check if required columns exist\n  required_cols &lt;- c(\"Region\", \"Year\")\n  missing_required &lt;- setdiff(required_cols, names(data))\n  if (length(missing_required) &gt; 0) {\n    stop(\"Missing required columns: \", paste(missing_required, collapse = \", \"))\n  }\n  \n  # Check for variable columns\n  available_vars &lt;- intersect(forecast_vars, names(data))\n  if (length(available_vars) == 0) {\n    stop(\"None of the forecast variables found in the data\")\n  }\n  cat(\"Found\", length(available_vars), \"out of\", length(forecast_vars), \"forecast variables\\n\")\n  \n  # Get unique regions\n  regions &lt;- unique(data$Region)\n  cat(\"Found\", length(regions), \"regions:\", paste(regions, collapse = \", \"), \"\\n\\n\")\n  \n  # Create empty data frame for results\n  all_forecasts &lt;- data.frame()\n  \n  # Process each region\n  for (region in regions) {\n    cat(\"Processing region:\", region, \"\\n\")\n    \n    # Filter data for this region\n    region_data &lt;- data %&gt;% filter(Region == region)\n    cat(\"  Region has\", nrow(region_data), \"rows\\n\")\n    \n    # Create an empty data frame for this region's forecasts\n    region_forecasts &lt;- expand.grid(\n      Region = region,\n      Year = forecast_start_year:forecast_end_year,\n      stringsAsFactors = FALSE\n    )\n    # Add DataType column\n    region_forecasts$DataType &lt;- \"Forecast\"\n    \n    # Process each variable\n    for (short_name in names(forecast_vars)) {\n      var_name &lt;- forecast_vars[short_name]\n      cat(\"  Forecasting:\", short_name, \"(\", var_name, \")\\n\")\n      \n      # Check if variable exists in data\n      if (!(var_name %in% names(region_data))) {\n        cat(\"    Variable not found in data, skipping\\n\")\n        region_forecasts[[short_name]] &lt;- NA\n        next\n      }\n      \n      # Get historical data for this variable\n      var_data &lt;- region_data %&gt;% \n        filter(!is.na(!!sym(var_name)), Year &lt; forecast_start_year) %&gt;%\n        arrange(Year)\n      \n      # Check if enough data\n      if (nrow(var_data) &lt; 5) {\n        cat(\"    Insufficient historical data (need at least 5 points), skipping\\n\")\n        region_forecasts[[short_name]] &lt;- NA\n        next\n      }\n      \n      # Create time series\n      cat(\"    Creating time series with\", nrow(var_data), \"points from\", \n          min(var_data$Year), \"to\", max(var_data$Year), \"\\n\")\n      \n      ts_data &lt;- ts(var_data[[var_name]], \n                   start = min(var_data$Year), \n                   end = max(var_data$Year), \n                   frequency = 1)\n      \n      # Fit ARIMA model and forecast\n      tryCatch({\n        cat(\"    Fitting ARIMA model...\\n\")\n        arima_model &lt;- auto.arima(ts_data, seasonal = FALSE, stepwise = TRUE)\n        \n        # Print model information\n        cat(\"    Model:\", arimaorder(arima_model), \"\\n\")\n        \n        # Generate forecast\n        forecast_years &lt;- forecast_end_year - forecast_start_year + 1\n        cat(\"    Generating\", forecast_years, \"year forecast...\\n\")\n        forecast_result &lt;- forecast(arima_model, h = forecast_years)\n        \n        # Add forecast to results\n        region_forecasts[[short_name]] &lt;- as.numeric(forecast_result$mean)\n        \n        # Print forecast summary\n        cat(\"    Forecast summary - First:\", round(forecast_result$mean[1], 4),\n            \"Last:\", round(forecast_result$mean[forecast_years], 4), \"\\n\")\n        \n      }, error = function(e) {\n        cat(\"    Error in forecasting:\", e$message, \"\\n\")\n        region_forecasts[[short_name]] &lt;- NA\n      })\n    }\n    \n    # Add this region's forecasts to the overall results\n    all_forecasts &lt;- bind_rows(all_forecasts, region_forecasts)\n    cat(\"  Completed forecasts for\", region, \"\\n\\n\")\n  }\n  \n  # Print summary\n  cat(\"========================================\\n\")\n  cat(\"ARIMA forecasting complete\\n\")\n  cat(\"Generated forecasts for\", nrow(all_forecasts), \"rows\\n\")\n  cat(\"Forecasted variables:\", paste(names(all_forecasts)[!(names(all_forecasts) %in% c(\"Region\", \"Year\", \"DataType\"))], collapse = \", \"), \"\\n\")\n  cat(\"========================================\\n\\n\")\n  \n  # Return the clean format results with short names\n  return(all_forecasts)\n}\n\nThe below code chunk run the arima_forecast from above code chunk, generating forecasts for year 2022 to 2030. The resulting forecasted data is then saved to a csv file name water_sanitation_forecasts.csv .\n\n forecast_data &lt;-arima_forecast(selected_data, \n                                         forecast_start_year = 2022, \n                                          forecast_end_year = 2030)\n\n========================================\nStarting ARIMA forecasting for 2022 to 2030 \n========================================\n\nVerifying input data...\nInput data has 132 rows and 15 columns\nFound 8 out of 8 forecast variables\nFound 6 regions: African Region, Eastern Mediterranean Region, European Region, Region of the Americas, South-East Asia Region, Western Pacific Region \n\nProcessing region: African Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 13.6691 Last: 15.0825 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 16.6458 Last: 12.6728 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 71.0816 Last: 76.0508 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 41.3846 Last: 46.1911 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 26.6579 Last: 29.7478 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 23.602 Last: 26.1116 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 123.6346 Last: 142.6114 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.8416 Last: 51.5612 \n  Completed forecasts for African Region \n\nProcessing region: Eastern Mediterranean Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 434.4198 Last: 477.9403 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 3.4662 Last: 0.4362 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 90.1361 Last: 93.579 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 87.4697 Last: 89.1055 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 3 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 75.6946 Last: 76.178 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 63.9669 Last: 61.6175 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 246.9798 Last: 287.6959 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 75.2812 Last: 90.2432 \n  Completed forecasts for Eastern Mediterranean Region \n\nProcessing region: European Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 29.106 Last: 27.9702 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 0.0173 Last: 0.0163 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 98.219 Last: 98.4982 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 97.367 Last: 97.6688 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 91.6315 Last: 91.4817 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 3 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 81.1007 Last: 84.2264 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 510.6295 Last: 487.6131 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 166.4738 Last: 197.3617 \n  Completed forecasts for European Region \n\nProcessing region: Region of the Americas \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 14.7549 Last: 15.361 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 2.0797 Last: 1.1645 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 96.0721 Last: 97.3119 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 88.8033 Last: 93.0552 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 2 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 70.6284 Last: 73.344 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 2 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.1699 Last: 53.2325 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 136.9497 Last: 140.3939 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 39.9161 Last: 39.9161 \n  Completed forecasts for Region of the Americas \n\nProcessing region: South-East Asia Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 34.9278 Last: 34.9278 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 2.9154 Last: -2.8741 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 94.3236 Last: 97.5214 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 84.3762 Last: 96.7598 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 50.2925 Last: 53.7727 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 45.787 Last: 54.3177 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 437.9126 Last: 490.0413 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 0 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 143.4833 Last: 143.4833 \n  Completed forecasts for South-East Asia Region \n\nProcessing region: Western Pacific Region \n  Region has 22 rows\n  Forecasting: WaterStress ( Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 24.028 Last: 24.3192 \n  Forecasting: OpenDefecation ( People.practicing.open.defecation....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 6.4089 Last: 4.2022 \n  Forecasting: BasicWaterServices ( People.using.at.least.basic.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 90.9617 Last: 93.5111 \n  Forecasting: BasicSanitationServices ( People.using.at.least.basic.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 81.5416 Last: 85.5992 \n  Forecasting: SafeManagedWaterServices ( People.using.safely.managed.drinking.water.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 55.5271 Last: 58.4247 \n  Forecasting: SafeManagedSanitationServices ( People.using.safely.managed.sanitation.services....of.population. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 1 2 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 65.9229 Last: 66.8086 \n  Forecasting: PopulationDensity ( Population.density..people.per.sq..km.of.land.area. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 1 \n    Generating 9 year forecast...\n    Forecast summary - First: 453.8227 Last: 481.3429 \n  Forecasting: WaterProductivity ( Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal. )\n    Creating time series with 22 points from 2000 to 2021 \n    Fitting ARIMA model...\n    Model: 0 1 0 \n    Generating 9 year forecast...\n    Forecast summary - First: 118.3247 Last: 146.8719 \n  Completed forecasts for Western Pacific Region \n\n========================================\nARIMA forecasting complete\nGenerated forecasts for 54 rows\nForecasted variables: WaterStress, OpenDefecation, BasicWaterServices, BasicSanitationServices, SafeManagedWaterServices, SafeManagedSanitationServices, PopulationDensity, WaterProductivity \n========================================\n\n write.csv(forecast_data, \"water_sanitation_forecasts.csv\", row.names = FALSE)"
  },
  {
    "objectID": "Prototype/Forcasting.html#apply-coefficient-to-forecast-data",
    "href": "Prototype/Forcasting.html#apply-coefficient-to-forecast-data",
    "title": "Health Trend Analysis",
    "section": "6.1 Apply coefficient to forecast data",
    "text": "6.1 Apply coefficient to forecast data\nThe below code chunk generates predictions for disease rates (Diarrhea, Typhoid, Unsafe Risk, and Hepatitis) based on forecasted changes in key water and sanitation variables (e.g., open defecation, basic water services, population density) for each region. The function first retrieves baseline values from the historical data for 2021, then calculates the forecasted disease rates for each region between 2022 and 2030 by applying coefficients that quantify the impact of changes in the variables. It iterates over each region and variable, adjusting the baseline values according to the forecasted changes, and ensures that negative disease values are set to zero. The function returns the updated dataset with forecasted disease rates.\n\npredict_diseases &lt;- function(forecast_data, selected_data) {\n  var_mapping &lt;- c(\n    \"Level.of.water.stress..freshwater.withdrawal.as.a.proportion.of.available.freshwater.resources\" = \"WaterStress\",\n    \"People.practicing.open.defecation....of.population.\" = \"OpenDefecation\",\n    \"People.using.at.least.basic.drinking.water.services....of.population.\" = \"BasicWaterServices\",\n    \"People.using.at.least.basic.sanitation.services....of.population.\" = \"BasicSanitationServices\",\n    \"People.using.safely.managed.drinking.water.services....of.population.\" = \"SafeManagedWaterServices\",\n    \"People.using.safely.managed.sanitation.services....of.population.\" = \"SafeManagedSanitationServices\",\n    \"Population.density..people.per.sq..km.of.land.area.\" = \"PopulationDensity\",\n    \"Water.productivity..total..constant.2015.US..GDP.per.cubic.meter.of.total.freshwater.withdrawal.\" = \"WaterProductivity\"\n  )\n  \n\n  historical &lt;- as.data.frame(selected_data)\n  \n\n  baseline &lt;- historical[historical$Year == 2021, ]\n  \n\n  coef_list &lt;- list(\n    DiarrheaRate = c(\n      OpenDefecation = -0.6755407,\n      BasicWaterServices = -1.0144098,\n      BasicSanitationServices = -0.1706479,\n      WaterProductivity = 0.0029523,\n      WaterStress = 0.0110199,\n      PopulationDensity = 0.0014148,\n      SafeManagedWaterServices = 0.2855646,\n      SafeManagedSanitationServices = -0.1302516\n    ),\n    TyphoidRate = c(\n      OpenDefecation = 0.015961,\n      BasicWaterServices = 0.018088,\n      BasicSanitationServices = 0.0024683,\n      WaterProductivity = 1.1884e-05,\n      WaterStress = -4.1832e-04,\n      PopulationDensity = 9.1629e-05,\n      SafeManagedWaterServices = -4.9622e-03,\n      SafeManagedSanitationServices = -2.0081e-03\n    ),\n    UnsafeRisk = c(\n      OpenDefecation = 0.72708968,\n      BasicWaterServices = 0.43477443,\n      BasicSanitationServices = 0.21651056,\n      WaterProductivity = 0.00063762,\n      WaterStress = -0.01913748,\n      PopulationDensity = 0.00037018,\n      SafeManagedWaterServices = -0.25010937,\n      SafeManagedSanitationServices = 0.04852111\n    ),\n    HepatitisRate = c(\n      OpenDefecation = 0.0085691,\n      BasicWaterServices = 0.023667,\n      BasicSanitationServices = -0.011585,\n      WaterProductivity = 8.6247e-05,\n      WaterStress = -0.0010463,\n      PopulationDensity = -3.7942e-04,\n      SafeManagedWaterServices = -3.6054e-03,\n      SafeManagedSanitationServices = -5.7112e-04\n    )\n  )\n  \n  \n  result &lt;- forecast_data\n  \n \n  for (disease in names(coef_list)) {\n    result[[disease]] &lt;- NA\n  }\n  \n\n  for (region in unique(result$Region)) {\n\n    region_baseline &lt;- baseline[baseline$Region == region, ]\n    \n    if (nrow(region_baseline) == 0) {\n      next\n    }\n    \n \n    region_rows &lt;- which(result$Region == region)\n    \n   \n    for (disease in names(coef_list)) {\n   \n      baseline_value &lt;- region_baseline[[disease]]\n      \n      for (row in region_rows) {\n      \n        result[row, disease] &lt;- baseline_value\n        \n        for (pred_name in names(coef_list[[disease]])) {\n          \n          forecast_col &lt;- pred_name\n          \n          historical_col &lt;- names(var_mapping)[var_mapping == forecast_col]\n          \n          if (length(historical_col) == 0 || !forecast_col %in% names(result)) {\n            next\n          }\n          \n          baseline_val &lt;- region_baseline[[historical_col]]\n          forecast_val &lt;- result[row, forecast_col]\n          \n          if (is.na(baseline_val) || is.na(forecast_val)) {\n            next\n          }\n          \n          coef_val &lt;- coef_list[[disease]][pred_name]\n          change &lt;- forecast_val - baseline_val\n          effect &lt;- coef_val * change\n          result[row, disease] &lt;- result[row, disease] + effect\n        }\n      }\n    }\n  }\n  \n  # Set all negative disease values to zero\n  for (disease in names(coef_list)) {\n    negative_rows &lt;- which(result[[disease]] &lt; 0)\n    if (length(negative_rows) &gt; 0) {\n      result[negative_rows, disease] &lt;- 0\n    }\n  }\n  \n  return(result)\n}\n\nThe code chunk below runs the predict_diseases created above, generating the predicted disease rates for each region and year. It then saves the results to a csv file named disease_predictions.csv.\n\ndisease_forecasts &lt;- predict_diseases(forecast_data, selected_data)\n\n\nwrite.csv(disease_forecasts, \"disease_predictions.csv\", row.names = FALSE)"
  },
  {
    "objectID": "Prototype/Forcasting.html#importing-the-combined-data",
    "href": "Prototype/Forcasting.html#importing-the-combined-data",
    "title": "Health Trend Analysis",
    "section": "8.1 Importing the combined data",
    "text": "8.1 Importing the combined data\nThe below code chunk use read.csv() to read the combined_complete_data.csv.\n\ncombined_data &lt;- read.csv(\"combined_complete_data.csv\")"
  },
  {
    "objectID": "Prototype/Forcasting.html#plotting-for-visualization",
    "href": "Prototype/Forcasting.html#plotting-for-visualization",
    "title": "Health Trend Analysis",
    "section": "8.2 plotting for visualization",
    "text": "8.2 plotting for visualization\nThe below code chunk creates a line plot using ggplot2 to visualise the historical result and forecast result of the DiarrheaRate.\nThe aim of the graph is to observe the change overtime.\n\nggplot(combined_data, aes(x = Year, y = DiarrheaRate, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Diarrhea Rate: Historical and Forecast\", y = \"Rate\")\n\n\n\n\n\n\n\n\n\ncombined_data_long &lt;- combined_data %&gt;%\n  pivot_longer(cols = c(UnsafeRisk, WaterStress, OpenDefecation, BasicWaterServices, \n                        BasicSanitationServices, SafeManagedWaterServices, \n                        SafeManagedSanitationServices, WaterProductivity),\n               names_to = \"WASH_Variable\", values_to = \"Value\")\n\n\nggplot(combined_data_long, aes(x = Year, y = Value, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~WASH_Variable, scales = \"free_y\") +  # Facet by WASH variable\n  labs(title = \"WASH Variables Over Time by Region\", y = \"Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ncombined_data &lt;- read.csv(\"combined_complete_data.csv\")\n\n\ncombined_data_long &lt;- combined_data %&gt;%\n  pivot_longer(cols = c(UnsafeRisk, WaterStress, OpenDefecation, BasicWaterServices, \n                        BasicSanitationServices, SafeManagedWaterServices, \n                        SafeManagedSanitationServices, WaterProductivity,\n                        TyphoidRate, DiarrheaRate, HepatitisRate),\n               names_to = \"Variable\", values_to = \"Value\")\n\n\nggplot(combined_data_long, aes(x = Year, y = Value, color = Region, linetype = DataType)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~Variable, scales = \"free_y\") +  # Facet by variable (WASH + diseases)\n  labs(title = \"WASH and Disease Variables Over Time by Region\", y = \"Value\") +\n  theme_minimal()"
  },
  {
    "objectID": "Prototype/Forcasting.html#interactive-plot-using-plotly",
    "href": "Prototype/Forcasting.html#interactive-plot-using-plotly",
    "title": "Health Trend Analysis",
    "section": "8.3 Interactive plot using plotly",
    "text": "8.3 Interactive plot using plotly\n\n8.3.1 Import Data\nThe below code chunk use read_csv() to read the csv file into R as a data frame.\n\ndata &lt;- read_csv(\"combined_complete_data.csv\")\n\n\n\n8.3.2 Visualizing the change over time through interactive plot\nThe below code chunk use plotly to visualise the change overtime of health indicator TyphoidRate of all region.\n\ninteractive_plot &lt;- plot_ly(data, \n                            x = ~Year, \n                            y = ~TyphoidRate, \n                            color = ~Region,   \n                            type = 'scatter', \n                            mode = 'lines+markers',  \n                            hoverinfo = 'text', \n                            text = ~paste('Year: ', Year, '&lt;br&gt;Typhoid Rate: ', round(TyphoidRate, 2))) %&gt;%\n  layout(title = \"Interactive Time Series of Typhoid Rate by Region\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Typhoid Rate\"))\n\n\ninteractive_plot\n\n\n\n\n\nThe below code chunk use plotly to visualise the change over time of Wash Indicator waterstress in all region.\n\nwash_indicator &lt;- \"WaterStress\"\n\ninteractive_plot &lt;- plot_ly(data, \n                            x = ~Year, \n                            y = ~get(wash_indicator),  \n                            color = ~Region,   \n                            type = 'scatter', \n                            mode = 'lines+markers',  \n                            hoverinfo = 'text', \n                            text = ~paste('Year: ', Year, '&lt;br&gt;', wash_indicator, ': ', round(get(wash_indicator), 2))) %&gt;%\n  layout(title = paste(\"Interactive Time Series of\", wash_indicator, \"by Region\"),\n         xaxis = list(title = \"Year\",\n                      rangeslider = list(type = \"date\"),  \n                      type = \"linear\"),  \n         yaxis = list(title = wash_indicator),\n         dragmode = \"pan\")\n\ninteractive_plot"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html",
    "href": "Prototype/Geospatial Data Analysis_P2.html",
    "title": "Geospatial Data Analysis_P2",
    "section": "",
    "text": "pacman::p_load(SmartEDA, tidyverse, ggExtra, ggiraph)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#importing-the-data-set",
    "href": "Prototype/Geospatial Data Analysis_P2.html#importing-the-data-set",
    "title": "Geospatial Data Analysis_P2",
    "section": "2.1 Importing the data set",
    "text": "2.1 Importing the data set\nIn the code chunk below, read_csv() of readr is used to import WDI Country Data.csv into R and parsed it into tibble R data.frame format.\n\nwater_indicators &lt;- read.csv(\"WDICountryData.csv\")"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#data-summary",
    "href": "Prototype/Geospatial Data Analysis_P2.html#data-summary",
    "title": "Geospatial Data Analysis_P2",
    "section": "2.2 Data summary",
    "text": "2.2 Data summary\nFunction ExpData() comes from the SmartEDA package in R and The type = 2 argument specifies the type of analysis to perform.\n\nwater_indicators %&gt;%\n  ExpData(type = 2)\n\n   Index  Variable_Name Variable_Type Sample_n Missing_Count Per_of_Missing\n1      1    Series.Name     character     2662             3          0.001\n2      2    Series.Code     character     2660             5          0.002\n3      3   Country.Name     character     2660             5          0.002\n4      4   Country.Code     character     2660             5          0.002\n5      5         Region     character     2660             5          0.002\n6      6 X2000..YR2000.     character     2660             5          0.002\n7      7 X2001..YR2001.     character     2660             5          0.002\n8      8 X2002..YR2002.     character     2660             5          0.002\n9      9 X2003..YR2003.     character     2660             5          0.002\n10    10 X2004..YR2004.     character     2660             5          0.002\n11    11 X2005..YR2005.     character     2660             5          0.002\n12    12 X2006..YR2006.     character     2660             5          0.002\n13    13 X2007..YR2007.     character     2660             5          0.002\n14    14 X2008..YR2008.     character     2660             5          0.002\n15    15 X2009..YR2009.     character     2660             5          0.002\n16    16 X2010..YR2010.     character     2660             5          0.002\n17    17 X2011..YR2011.     character     2660             5          0.002\n18    18 X2012..YR2012.     character     2660             5          0.002\n19    19 X2013..YR2013.     character     2660             5          0.002\n20    20 X2014..YR2014.     character     2660             5          0.002\n21    21 X2015..YR2015.     character     2660             5          0.002\n22    22 X2016..YR2016.     character     2660             5          0.002\n23    23 X2017..YR2017.     character     2660             5          0.002\n24    24 X2018..YR2018.     character     2660             5          0.002\n25    25 X2019..YR2019.     character     2660             5          0.002\n26    26 X2020..YR2020.     character     2660             5          0.002\n27    27 X2021..YR2021.     character     2660             5          0.002\n   No_of_distinct_values\n1                     13\n2                     11\n3                    267\n4                    267\n5                      8\n6                   1856\n7                   1870\n8                   1886\n9                   1886\n10                  1894\n11                  1915\n12                  1940\n13                  1948\n14                  1973\n15                  1980\n16                  2004\n17                  2023\n18                  2041\n19                  2050\n20                  2054\n21                  2047\n22                  2044\n23                  2032\n24                  2008\n25                  1993\n26                  1965\n27                  1945"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#data-cleaning",
    "href": "Prototype/Geospatial Data Analysis_P2.html#data-cleaning",
    "title": "Geospatial Data Analysis_P2",
    "section": "2.3 Data Cleaning",
    "text": "2.3 Data Cleaning\n\nwater_indicators[6:27] &lt;- lapply(water_indicators[6:27], function(x) as.numeric(as.character(x)))\n\nChanging column name\n\nwater_long &lt;- water_indicators %&gt;%\n  pivot_longer(\n    cols = starts_with(\"X\"),             \n    names_to = \"Year\",\n    values_to = \"Value\"\n  )\n\n\nwater_long &lt;- water_long %&gt;%\n  mutate(Year = gsub(\"X(\\\\d{4})\\\\.\\\\..*\", \"\\\\1\", Year),\n         Year = as.numeric(Year),\n         Value = as.numeric(Value))  \n\nFirst, we will select latest records in 2021 for nine indicator.\n\nwater_long_selected &lt;- water_long %&gt;%\n  filter(Year == 2021)\n\n\nwater_long_selected[water_long_selected == \"..\"] &lt;- NA\nwater_long_selected[water_long_selected == \"#N/A\"] &lt;- NA\nwater_long_selected[water_long_selected == \"\"] &lt;- NA\n\nNext, reshape the data for 2021 and change data type\n\nwater_long_selected_reshape &lt;- water_long_selected %&gt;%\n  select(Country = Country.Name, Region, Variable = Series.Name, Value) %&gt;%\n  pivot_wider(names_from = Variable, values_from = Value) %&gt;%\n  drop_na(\"Region\")\n\n\nwater_long_selected_reshape$`Population, total` &lt;- as.numeric(gsub(\",\", \"\", water_long_selected_reshape$`Population, total`))"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-level-of-water-stress-and-water-productivity-us-gdp-per-m³-by-region",
    "href": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-level-of-water-stress-and-water-productivity-us-gdp-per-m³-by-region",
    "title": "Geospatial Data Analysis_P2",
    "section": "3.1 Simple scatterplot between Level of water stress (%) and Water Productivity (US$ GDP per m³) by region",
    "text": "3.1 Simple scatterplot between Level of water stress (%) and Water Productivity (US$ GDP per m³) by region\n\n3.1.1 African Region\n\nwater_long_selected_reshape_9 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'African Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_9 &lt;- water_long_selected_reshape_9 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np1 &lt;- ggplot(data = water_long_selected_reshape_9, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\np1\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p1)\n\n\n\n\n\n\n\n3.1.2 European Region\n\nwater_long_selected_reshape_10 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'European Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_10 &lt;- water_long_selected_reshape_10 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np2 &lt;- ggplot(data = water_long_selected_reshape_10, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\np2\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p2)\n\n\n\n\n\n\n\n3.1.3 Western Pacific Region\n\nwater_long_selected_reshape_11 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'Western Pacific Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_11 &lt;- water_long_selected_reshape_11 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np3 &lt;- ggplot(data = water_long_selected_reshape_11, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\n\np3\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p3)\n\n\n\n\n\n\n\n3.1.4 Eastern Mediterranean Region\n\nwater_long_selected_reshape_12 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'Eastern Mediterranean Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_12 &lt;- water_long_selected_reshape_12 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np4 &lt;- ggplot(data = water_long_selected_reshape_12, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\n\np4\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p4)\n\n\n\n\n\n\n\n3.1.5 South-East Asia Region\n\nwater_long_selected_reshape_13 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'South-East Asia Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_13 &lt;- water_long_selected_reshape_13 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np5 &lt;- ggplot(data = water_long_selected_reshape_13, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\n\np5\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p5)\n\n\n\n\n\n\n\n3.1.6 Region of the Americas\n\nwater_long_selected_reshape_14 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  filter(Region == 'Region of the Americas') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_14 &lt;- water_long_selected_reshape_14 %&gt;%\n  drop_na(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n          `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`) %&gt;%\n  mutate(\n    `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources` = \n      round(as.numeric(`Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`), 0),\n    \n    `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)` = \n      round(as.numeric(`Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`), 0)\n  )\n\n\np6 &lt;- ggplot(data = water_long_selected_reshape_14, \n             aes(x = `Level of water stress: freshwater withdrawal as a proportion of available freshwater resources`, \n                 y = `Water productivity, total (constant 2015 US$ GDP per cubic meter of total freshwater withdrawal)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(0, 140), ylim = c(0, 140)) +\n  labs(x = \"Level of water stress (%)\", \n       y = \"Water Productivity (US$ GDP per m³)\",\n       color = \"Country Name\")\n\np6\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p6)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-basic-drinking-water-services-and-safely-managed-drinking-water-services-by-region",
    "href": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-basic-drinking-water-services-and-safely-managed-drinking-water-services-by-region",
    "title": "Geospatial Data Analysis_P2",
    "section": "3.2 Simple scatterplot between basic drinking water services (%) and safely managed drinking water services (%) by region",
    "text": "3.2 Simple scatterplot between basic drinking water services (%) and safely managed drinking water services (%) by region\n\n3.2.1 African Region\n\nwater_long_selected_reshape_15 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'African Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_15 &lt;- water_long_selected_reshape_15 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np7 &lt;- ggplot(data = water_long_selected_reshape_15, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np7\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p7)\n\n\n\n\n\n\n\n3.2.2 European Region\n\nwater_long_selected_reshape_16 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'European Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_16 &lt;- water_long_selected_reshape_16 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np8 &lt;- ggplot(data = water_long_selected_reshape_16, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np8\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p8)\n\n\n\n\n\n\n\n3.2.3 Western Pacific Region\n\nwater_long_selected_reshape_17 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'European Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_17 &lt;- water_long_selected_reshape_17 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np9 &lt;- ggplot(data = water_long_selected_reshape_17, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np9\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p9)\n\n\n\n\n\n\n\n3.2.4 Eastern Mediterranean Region\n\nwater_long_selected_reshape_18 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'Eastern Mediterranean Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_18 &lt;- water_long_selected_reshape_18 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np10 &lt;- ggplot(data = water_long_selected_reshape_18, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np10\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p10)\n\n\n\n\n\n\n\n3.2.5 South-East Asia Region\n\nwater_long_selected_reshape_19 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'South-East Asia Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_19 &lt;- water_long_selected_reshape_19 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np11 &lt;- ggplot(data = water_long_selected_reshape_19, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np11\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p11)\n\n\n\n\n\n\n\n3.2.6 Region of the Americas\n\nwater_long_selected_reshape_20 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  filter(Region == 'Region of the Americas') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_20 &lt;- water_long_selected_reshape_20 %&gt;%\n  drop_na(`People using at least basic drinking water services (% of population)`, `People using safely managed drinking water services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic drinking water services (% of population)` = \n      round(as.numeric(`People using at least basic drinking water services (% of population)`), 0),\n    \n    `People using safely managed drinking water services (% of population)` = \n      round(as.numeric(`People using safely managed drinking water services (% of population)`), 0)\n  )\n\n\np12 &lt;- ggplot(data = water_long_selected_reshape_20, \n             aes(x = `People using at least basic drinking water services (% of population)`, \n                 y = `People using safely managed drinking water services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(30, 100), ylim = c(5, 100)) +\n  labs(x = \"Basic drinking water services (%)\", \n       y = \"safely managed drinking water services\",\n       color = \"Country Name\")\np12\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p12)"
  },
  {
    "objectID": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-basic-sanitation-services-of-population-and-safely-managed-sanitation-services-of-population",
    "href": "Prototype/Geospatial Data Analysis_P2.html#simple-scatterplot-between-basic-sanitation-services-of-population-and-safely-managed-sanitation-services-of-population",
    "title": "Geospatial Data Analysis_P2",
    "section": "3.3 Simple scatterplot between basic sanitation services (% of population) and safely managed sanitation services (% of population)",
    "text": "3.3 Simple scatterplot between basic sanitation services (% of population) and safely managed sanitation services (% of population)\n\n3.3.1 African Region\n\nwater_long_selected_reshape_21 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'African Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_21 &lt;- water_long_selected_reshape_21 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np13 &lt;- ggplot(data = water_long_selected_reshape_21, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np13\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p13)\n\n\n\n\n\n\n\n3.3.2 European Region\n\nwater_long_selected_reshape_22 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'European Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_22 &lt;- water_long_selected_reshape_22 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np14 &lt;- ggplot(data = water_long_selected_reshape_22, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np14\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p14)\n\n\n\n\n\n\n\n3.3.3 Western Pacific Region\n\nwater_long_selected_reshape_23 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'Western Pacific Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_23 &lt;- water_long_selected_reshape_23 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np15 &lt;- ggplot(data = water_long_selected_reshape_23, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np15\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p15)\n\n\n\n\n\n\n\n3.3.4 Eastern Mediterranean Region\n\nwater_long_selected_reshape_24 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'Eastern Mediterranean Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_24 &lt;- water_long_selected_reshape_24 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np16 &lt;- ggplot(data = water_long_selected_reshape_24, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np16\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p16)\n\n\n\n\n\n\n\n3.3.5 South-East Asia Region\n\nwater_long_selected_reshape_25 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'South-East Asia Region') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_25 &lt;- water_long_selected_reshape_25 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np17 &lt;- ggplot(data = water_long_selected_reshape_24, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np17\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p17)\n\n\n\n\n\n\n\n3.3.6 Region of the Americas\n\nwater_long_selected_reshape_26 &lt;- water_long_selected_reshape %&gt;%\n  select('Country', 'Region',`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  filter(Region == 'Region of the Americas') %&gt;%\n  mutate(Country = as.factor(Country))\n\n\nwater_long_selected_reshape_26 &lt;- water_long_selected_reshape_26 %&gt;%\n  drop_na(`People using at least basic sanitation services (% of population)`, `People using safely managed sanitation services (% of population)`) %&gt;%\n  mutate(\n    `People using at least basic sanitation services (% of population)` = \n      round(as.numeric(`People using at least basic sanitation services (% of population)`), 0),\n    \n    `People using safely managed sanitation services (% of population)` = \n      round(as.numeric(`People using safely managed sanitation services (% of population)`), 0)\n  )\n\n\np18 &lt;- ggplot(data = water_long_selected_reshape_26, \n             aes(x = `People using at least basic sanitation services (% of population)`, \n                 y = `People using safely managed sanitation services (% of population)`, \n                 color = Country)) +  \n  geom_point_interactive(aes(\n    tooltip = Country))+\n  coord_cartesian(xlim = c(5, 100), ylim = c(0, 100)) +\n  labs(x = \"Basic sanitation services (%)\", \n       y = \"safely managed sanitation services (%)\",\n       color = \"Country Name\")\np18\n\n\n\n\n\n\n\n\n\ngirafe(ggobj = p18)"
  }
]